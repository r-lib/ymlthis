[{"path":"https://ymlthis.r-lib.org/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://www.contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"https://ymlthis.r-lib.org/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to ymlthis","title":"Contributing to ymlthis","text":"outlines propose change ymlthis. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://ymlthis.r-lib.org/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to ymlthis","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://ymlthis.r-lib.org/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to ymlthis","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://ymlthis.r-lib.org/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to ymlthis","text":"recommend create Git branch pull request (PR). Look Travis AppVeyor build status making changes. README contain badges continuous integration services used package. New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://ymlthis.r-lib.org/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to ymlthis","text":"Please note ymlthis project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ymlthis.r-lib.org/CONTRIBUTING.html","id":"see-tidyverse-development-contributing-guide","dir":"","previous_headings":"","what":"See tidyverse development contributing guide","title":"Contributing to ymlthis","text":"details.","code":""},{"path":"https://ymlthis.r-lib.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Malcolm Barrett Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ymlthis.r-lib.org/articles/introduction-to-ymlthis.html","id":"writing-yaml-with-ymlthis","dir":"Articles","previous_headings":"","what":"Writing YAML with ymlthis","title":"An Introduction to ymlthis","text":"ymlthis makes easy write valid YAML handling syntax documenting majority YAML fields one place. yml() creates yml object , default, sets author name date. ymlthis uses name options devtools usethis (options(devtools.name = \"name\") options(usethis.full_name = \"name\"), respectively), well whoami package, try find author’s name. default, date set `r format(Sys.Date())`, update date knitting. Functions start yml_*() take return yml objects, can used add modify YAML fields. instance, add title, use yml_title() essential use YAML R Markdown set output type. default, output YAML field looks like calls rmarkdown::html_document() knitting. nested fields passed output come output function using (can check ?pkg::output_function() see options ). ymlthis writes validates output YAML parsing calls functions. can, example, nest R Markdown’s pdf_document() inside yml_output(): Passing arguments output functions nest correctly YAML. can pass multiple output functions facilitate rendering R Markdown files multiple formats: YAML fields can come variety places: R Markdown , output function, Pandoc (example, options used LaTeX), custom templates. Many fields documented yml_*() functions. can also use yml_toplevel() append YAML fields covered ymlthis.","code":"yml()  [90m---  [39m [32mauthor [39m [90m: [39m Malcolm Barrett  [32mdate [39m [90m: [39m '`r format(Sys.Date())`'  [90m---  [39m yml() %>%    yml_title(\"An introduction to ymlthis\")  [90m---  [39m [32mauthor [39m [90m: [39m Malcolm Barrett  [32mdate [39m [90m: [39m '`r format(Sys.Date())`'  [32mtitle [39m [90m: [39m An introduction to ymlthis  [90m---  [39m output: html_document yml() %>%    yml_output(pdf_document())  [90m---  [39m [32mauthor [39m [90m: [39m Malcolm Barrett  [32mdate [39m [90m: [39m '`r format(Sys.Date())`'  [32moutput [39m [90m: [39m pdf_document  [90m---  [39m yml() %>%    yml_output(pdf_document(toc = TRUE))  [90m---  [39m [32mauthor [39m [90m: [39m Malcolm Barrett  [32mdate [39m [90m: [39m '`r format(Sys.Date())`'  [32moutput [39m [90m: [39m    [32mpdf_document [39m [90m: [39m      [32mtoc [39m [90m: [39m true  [90m---  [39m yml() %>%    yml_output(     pdf_document(toc = TRUE),     html_document()   )  [90m---  [39m [32mauthor [39m [90m: [39m Malcolm Barrett  [32mdate [39m [90m: [39m '`r format(Sys.Date())`'  [32moutput [39m [90m: [39m    [32mpdf_document [39m [90m: [39m      [32mtoc [39m [90m: [39m true    [32mhtml_document [39m [90m: [39m default  [90m---  [39m yml() %>%   yml_author(     c(\"Yihui Xie\", \"Hadley Wickham\"),     affiliation = \"RStudio\"   ) %>%   yml_date(\"07/04/2019\") %>%   yml_title(\"Reproducible Research in R\") %>%    yml_category(c(\"r\", \"reprodicibility\")) %>%    yml_output(     pdf_document(       keep_tex = TRUE,       includes = includes2(after_body = \"footer.tex\")     )   ) %>%   yml_latex_opts(biblio_style = \"apalike\")  [90m---  [39m [32mauthor [39m [90m: [39m  [90m-  [39m [32mname [39m [90m: [39m Yihui Xie    [32maffiliation [39m [90m: [39m RStudio  [90m-  [39m [32mname [39m [90m: [39m Hadley Wickham    [32maffiliation [39m [90m: [39m RStudio  [32mdate [39m [90m: [39m 07/04/2019  [32mtitle [39m [90m: [39m Reproducible Research in R  [32mcategory [39m [90m: [39m  [90m-  [39mr  [90m-  [39mreprodicibility  [32moutput [39m [90m: [39m    [32mpdf_document [39m [90m: [39m      [32mkeep_tex [39m [90m: [39m true      [32mincludes [39m [90m: [39m        [32mafter_body [39m [90m: [39m footer.tex  [32mbiblio-style [39m [90m: [39m apalike  [90m---  [39m"},{"path":"https://ymlthis.r-lib.org/articles/introduction-to-ymlthis.html","id":"parameterized-reports","dir":"Articles","previous_headings":"Writing YAML with ymlthis","what":"Parameterized reports","title":"An Introduction to ymlthis","text":"Parameterized reports powerful feature R Markdown lets specify variables YAML metadata used report, letting re-use reports variety settings. set parameters, use params YAML field access parameter report calling params$variable_name. Basic YAML parameters looks like Calling params$country R Markdown document thus return \"Turkey\". yml_params() write : can also fill parameters using Shiny app “Knit Parameters” button RStudio IDE passing \"ask\" params argument rmarkdown::render(). R Markdown try guess Shiny widget type value parameter, can specify ymlthis functions start shiny_*().","code":"params:   country: \"Turkey\" yml() %>%    yml_params(country = \"Turkey\")  [90m---  [39m [32mauthor [39m [90m: [39m Malcolm Barrett  [32mdate [39m [90m: [39m '`r format(Sys.Date())`'  [32mparams [39m [90m: [39m    [32mcountry [39m [90m: [39m Turkey  [90m---  [39m yml() %>%   yml_params(     data = shiny_file(\"Upload Data (.csv)\"),     n = shiny_numeric(\"n to sample\", 10),     date = shiny_date(\"Date\"),     show_plot = shiny_checkbox(\"Plot the data?\", TRUE)   )  [90m---  [39m [32mauthor [39m [90m: [39m Malcolm Barrett  [32mdate [39m [90m: [39m '`r format(Sys.Date())`'  [32mparams [39m [90m: [39m    [32mdata [39m [90m: [39m      [32minput [39m [90m: [39m file      [32mlabel [39m [90m: [39m Upload Data (.csv)   'n' [90m: [39m      [32minput [39m [90m: [39m numeric      [32mlabel [39m [90m: [39m n to sample      [32mvalue [39m [90m: [39m 10.0    [32mdate [39m [90m: [39m      [32minput [39m [90m: [39m date      [32mlabel [39m [90m: [39m Date    [32mshow_plot [39m [90m: [39m      [32minput [39m [90m: [39m checkbox      [32mlabel [39m [90m: [39m Plot the data?      [32mvalue [39m [90m: [39m true  [90m---  [39m"},{"path":"https://ymlthis.r-lib.org/articles/introduction-to-ymlthis.html","id":"references-and-citations","dir":"Articles","previous_headings":"Writing YAML with ymlthis","what":"References and citations","title":"An Introduction to ymlthis","text":"R Markdown excellent support citations. simplest way use references R Markdown file add bibliography file using bibliography field. However, references want keep file self-contained, can also specify references directly YAML using yml_reference() reference(). yml_reference() also supports package citation using .bibentry argument citation(). existing .bib file, want specify YAML, instead, can convert bib2yml(). instance, wrote .bib file packages used document knitr::write_bib(), bib2yml() translate file YAML can include directly metadata.","code":"yml() %>%    yml_citations(bibliography = \"refs.bib\")  [90m---  [39m [32mauthor [39m [90m: [39m Malcolm Barrett  [32mdate [39m [90m: [39m '`r format(Sys.Date())`'  [32mbibliography [39m [90m: [39m refs.bib  [90m---  [39m ref <- reference(   id = \"fenner2012a\",   title = \"One-click science marketing\",   author = list(     family = \"Fenner\",     given = \"Martin\"   ),   `container-title` = \"Nature Materials\",   volume = 11L,   URL = \"https://doi.org/10.1038/nmat3283\",   DOI = \"10.1038/nmat3283\",   issue = 4L,   publisher = \"Nature Publishing Group\",   page = \"261-263\",   type = \"article-journal\",   issued = list(     year = 2012,     month = 3   ) )  yml() %>%   yml_reference(ref)  [90m---  [39m [32mauthor [39m [90m: [39m Malcolm Barrett  [32mdate [39m [90m: [39m '`r format(Sys.Date())`'  [32mreference [39m [90m: [39m  [90m-  [39m [32mid [39m [90m: [39m fenner2012a    [32mtitle [39m [90m: [39m One-click science marketing    [32mauthor [39m [90m: [39m      [32mfamily [39m [90m: [39m Fenner      [32mgiven [39m [90m: [39m Martin    [32mcontainer-title [39m [90m: [39m Nature Materials    [32mvolume [39m [90m: [39m 11    [32mURL [39m [90m: [39m https [90m: [39m//doi.org/10.1038/nmat3283    [32mDOI [39m [90m: [39m 10.1038/nmat3283    [32missue [39m [90m: [39m 4    [32mpublisher [39m [90m: [39m Nature Publishing Group    [32mpage [39m [90m: [39m 261-263    [32mtype [39m [90m: [39m article-journal    [32missued [39m [90m: [39m      [32myear [39m [90m: [39m 2012.0      [32mmonth [39m [90m: [39m 3.0  [90m---  [39m yml() %>%   yml_reference(.bibentry = citation(\"purrr\"))  [90m---  [39m [32mauthor [39m [90m: [39m Malcolm Barrett  [32mdate [39m [90m: [39m '`r format(Sys.Date())`'  [90m---  [39m"},{"path":"https://ymlthis.r-lib.org/articles/introduction-to-ymlthis.html","id":"r-markdown-extensions","dir":"Articles","previous_headings":"","what":"R Markdown extensions","title":"An Introduction to ymlthis","text":"Packages extend R Markdown, bookdown blogdown, also extend YAML used make documents. One main ways packages introduce YAML new output functions. xaringan, instance, doesn’t use custom YAML outside output function, ymlthis supports --box. Passing xaringan::moon_reader() yml_output() write YAML . ymlthis can process output function. packages also add additional YAML; ymlthis supports six R Markdown packages: bookdown, blogdown, pkgdown, pagedown, rticles, distill. ymlthis also supports YAML writing scheduled emails RStudio Connect. can find functions supporting packages patterns yml_packagename_*() packagename_*() (rsconnect, case RStudio Connect functions). Functions start yml_packagename_*() document YAML fields return yml objects, functions start packagename_*() helper functions. also template functions. pkgdown_template(), instance, assemble full template _pkgdown.yml return yml object, blogdown_template() return YAML templates matching Hugo theme. Sources YAML R Markdown Extension","code":"yml() %>%    yml_title(\"Presentation Ninja\") %>%    yml_subtitle(\"with xaringan\") %>%    yml_output(     xaringan::moon_reader(       lib_dir = \"libs\",       nature = list(         highlightStyle = \"github\",         highlightLines = TRUE,         countIncrementalSlides = FALSE       )     )   )  [90m---  [39m [32mauthor [39m [90m: [39m Malcolm Barrett  [32mdate [39m [90m: [39m '`r format(Sys.Date())`'  [32mtitle [39m [90m: [39m Presentation Ninja  [32msubtitle [39m [90m: [39m with xaringan  [32moutput [39m [90m: [39m    [32mxaringan::moon_reader [39m [90m: [39m      [32mlib_dir [39m [90m: [39m libs      [32mnature [39m [90m: [39m        [32mhighlightStyle [39m [90m: [39m github        [32mhighlightLines [39m [90m: [39m true        [32mcountIncrementalSlides [39m [90m: [39m false  [90m---  [39m"},{"path":"https://ymlthis.r-lib.org/articles/introduction-to-ymlthis.html","id":"r-markdown-workflows","dir":"Articles","previous_headings":"","what":"R Markdown workflows","title":"An Introduction to ymlthis","text":"ymlthis prints YAML cleanly console copy paste R Markdown document. However, ymlthis also provides number workflows.","code":""},{"path":"https://ymlthis.r-lib.org/articles/introduction-to-ymlthis.html","id":"yaml-add-in","dir":"Articles","previous_headings":"R Markdown workflows","what":"YAML add-in","title":"An Introduction to ymlthis","text":"easiest way use Shiny add-included ymlthis; add-supports commonly used R Markdown options, citations, LaTeX options, parameterized reports. can export YAML R Markdown file, YAML file, placed clipboard. flexibility use R Markdown extension packages, ’ll write code, ’ve vignette. main options write YAML file place clipboard.","code":""},{"path":"https://ymlthis.r-lib.org/articles/introduction-to-ymlthis.html","id":"writing-to-files","dir":"Articles","previous_headings":"R Markdown workflows","what":"Writing to files","title":"An Introduction to ymlthis","text":"use_rmarkdown(), use_yml_file(), friends take yml object write file . Passing yml objects use_rmarkdown() often simplest approach: translate yml object YAML open new R Markdown file metadata already written. ymlthis also supports YAML files. instance, using pkgdown_template() %>% use_pkgdown_yml() write YAML pkgdown site _pkgdown.yml based package directory. ymlthis also helper functions working Pandoc templates highlighting themes. example, let’s set navbar YAML R Markdown website pass use_navbar_yml(). addition writing files, can save YAML .Rprofile using options(ymlthis.defaults = \"{YAML}\"). yml() return stored YAML default. pass yml object use_yml_defaults(), code placed clipboard, paste .Rprofile. Open file usethis::edit_r_profile(). can also set default body text use_rmarkdown() setting ymlthis.rmd_body() option, e.g. options(ymlthis.rmd_body = \"{text}\") (take advantage use_rmd_defaults()). Together specifying default YAML, use_rmarkdown() also serves ad-hoc way make R Markdown templates. ymlthis use_*() functions write .yml files ymlthis use_*() write .Rmd files","code":"navbar_yaml <- yml_empty() %>%   yml_site_opts(     name = \"my-website\",     output_dir =  \"_site\",     include = \"demo.R\",     exclude = c(\"docs.txt\", \"*.csv\")   ) %>%   yml_navbar(     title = \"My Website\",     left = list(       navbar_page(\"Home\", href = \"index.html\"),       navbar_page(navbar_separator(), href = \"about.html\")     )   ) %>%   yml_output(html_document(toc = TRUE, highlight = \"textmate\"))  # save to temporary directory since this is not interactive path <- tempfile() fs::dir_create(path)  use_navbar_yml(navbar_yaml, path = path) #> ✔ Writing '/tmp/RtmptFPqxJ/file43e83accd388/_navbar.yml' old <- options(   ymlthis.default_yml = \"author: Malcolm Barrett date: '`r format(Sys.Date())`' output: bookdown::pdf_document2\",   ymlthis.rmd_body = c(     \"\",     ymlthis::setup_chunk(),     \"\",     ymlthis::code_chunk(       library(ymlthis)     )   ) )  #  use temporary path set above use_rmarkdown(path = file.path(path, \"analysis.Rmd\")) #> ✔ Writing '/tmp/RtmptFPqxJ/file43e83accd388/analysis.Rmd'  # reset previous option defaults options(old)"},{"path":"https://ymlthis.r-lib.org/articles/introduction-to-ymlthis.html","id":"placing-yaml-on-your-clipboard","dir":"Articles","previous_headings":"R Markdown workflows","what":"Placing YAML on your clipboard","title":"An Introduction to ymlthis","text":"final way use ymlthis put YAML clipboard paste file setting. place rendered YAML clipboard, simply pass yml object use_yml(). Additional ymlthis use_*() functions","code":""},{"path":"https://ymlthis.r-lib.org/articles/introduction-to-ymlthis.html","id":"working-with-yml-objects","dir":"Articles","previous_headings":"","what":"Working with yml objects","title":"An Introduction to ymlthis","text":"hood, yml objects lists types match corresponding YAML converted YAML printing writing files. yml objects just lists, can work . ymlthis also includes several purrr-like functions working yml objects. Let’s define yml object fairly comprehensive set options: resulting YAML x : can use yml_discard() remove category option: can use purrr-style lambdas express discard. YAML fields length greater one? yml_pluck() function useful selectively acquiring nested portion YAML:","code":"x <-    yml() %>%   yml_author(     c(\"Yihui Xie\", \"Hadley Wickham\"),     affiliation = \"RStudio\"   ) %>%   yml_date(\"07/04/2019\") %>%   yml_title(\"Reproducible Research in R\") %>%    yml_category(c(\"r\", \"reprodicibility\")) %>%    yml_output(     pdf_document(       keep_tex = TRUE,       includes = includes2(after_body = \"footer.tex\")     ),     html_document()   ) %>%   yml_latex_opts(biblio_style = \"apalike\")  [90m---  [39m [32mauthor [39m [90m: [39m  [90m-  [39m [32mname [39m [90m: [39m Yihui Xie    [32maffiliation [39m [90m: [39m RStudio  [90m-  [39m [32mname [39m [90m: [39m Hadley Wickham    [32maffiliation [39m [90m: [39m RStudio  [32mdate [39m [90m: [39m 07/04/2019  [32mtitle [39m [90m: [39m Reproducible Research in R  [32mcategory [39m [90m: [39m  [90m-  [39mr  [90m-  [39mreprodicibility  [32moutput [39m [90m: [39m    [32mpdf_document [39m [90m: [39m      [32mkeep_tex [39m [90m: [39m true      [32mincludes [39m [90m: [39m        [32mafter_body [39m [90m: [39m footer.tex    [32mhtml_document [39m [90m: [39m default  [32mbiblio-style [39m [90m: [39m apalike  [90m---  [39m x %>%    yml_discard(\"category\")  [90m---  [39m [32mauthor [39m [90m: [39m  [90m-  [39m [32mname [39m [90m: [39m Yihui Xie    [32maffiliation [39m [90m: [39m RStudio  [90m-  [39m [32mname [39m [90m: [39m Hadley Wickham    [32maffiliation [39m [90m: [39m RStudio  [32mdate [39m [90m: [39m 07/04/2019  [32mtitle [39m [90m: [39m Reproducible Research in R  [32moutput [39m [90m: [39m    [32mpdf_document [39m [90m: [39m      [32mkeep_tex [39m [90m: [39m true      [32mincludes [39m [90m: [39m        [32mafter_body [39m [90m: [39m footer.tex    [32mhtml_document [39m [90m: [39m default  [32mbiblio-style [39m [90m: [39m apalike  [90m---  [39m x %>%    yml_discard(~ length(.x) > 1)  [90m---  [39m [32mdate [39m [90m: [39m 07/04/2019  [32mtitle [39m [90m: [39m Reproducible Research in R  [32mbiblio-style [39m [90m: [39m apalike  [90m---  [39m x %>%    yml_pluck(\"output\", \"pdf_document\")  [90m---  [39m [32mkeep_tex [39m [90m: [39m true  [32mincludes [39m [90m: [39m    [32mafter_body [39m [90m: [39m footer.tex  [90m---  [39m"},{"path":"https://ymlthis.r-lib.org/articles/yaml-fieldguide.html","id":"basic-yaml","dir":"Articles","previous_headings":"","what":"Basic YAML","title":"The YAML Fieldguide","text":"Basic YAML nested fields output field based arguments output function. See help page function using, e.g., ?rmarkdown::pdf_document.","code":""},{"path":"https://ymlthis.r-lib.org/articles/yaml-fieldguide.html","id":"latexpdf-options","dir":"Articles","previous_headings":"","what":"LaTeX/PDF Options","title":"The YAML Fieldguide","text":"LaTeX/PDF Options","code":""},{"path":"https://ymlthis.r-lib.org/articles/yaml-fieldguide.html","id":"r-markdown-websites","dir":"Articles","previous_headings":"","what":"R Markdown Websites","title":"The YAML Fieldguide","text":"R Markdown Websites","code":""},{"path":"https://ymlthis.r-lib.org/articles/yaml-fieldguide.html","id":"citations","dir":"Articles","previous_headings":"","what":"Citations","title":"The YAML Fieldguide","text":"Citations","code":""},{"path":"https://ymlthis.r-lib.org/articles/yaml-fieldguide.html","id":"blogdown-yaml","dir":"Articles","previous_headings":"","what":"blogdown YAML","title":"The YAML Fieldguide","text":"blogdown YAML","code":""},{"path":"https://ymlthis.r-lib.org/articles/yaml-fieldguide.html","id":"bookdown-yaml","dir":"Articles","previous_headings":"","what":"bookdown YAML","title":"The YAML Fieldguide","text":"bookdown YAML","code":""},{"path":"https://ymlthis.r-lib.org/articles/yaml-fieldguide.html","id":"pkgdown-yaml","dir":"Articles","previous_headings":"","what":"pkgdown YAML","title":"The YAML Fieldguide","text":"pkgdown YAML","code":""},{"path":"https://ymlthis.r-lib.org/articles/yaml-fieldguide.html","id":"pagedown-yaml","dir":"Articles","previous_headings":"","what":"pagedown YAML","title":"The YAML Fieldguide","text":"pagedown YAML","code":""},{"path":"https://ymlthis.r-lib.org/articles/yaml-fieldguide.html","id":"distill-yaml","dir":"Articles","previous_headings":"","what":"distill YAML","title":"The YAML Fieldguide","text":"distill YAML","code":""},{"path":"https://ymlthis.r-lib.org/articles/yaml-fieldguide.html","id":"rticles-yaml","dir":"Articles","previous_headings":"","what":"rticles YAML","title":"The YAML Fieldguide","text":"rticles YAML","code":""},{"path":"https://ymlthis.r-lib.org/articles/yaml-fieldguide.html","id":"rstudio-connect-scheduled-email-yaml","dir":"Articles","previous_headings":"","what":"RStudio Connect Scheduled Email YAML","title":"The YAML Fieldguide","text":"RStudio Connect Scheduled Email YAML","code":""},{"path":"https://ymlthis.r-lib.org/articles/yaml-overview.html","id":"basic-syntax","dir":"Articles","previous_headings":"","what":"Basic syntax","title":"YAML: an Overview","text":"basic syntax YAML use key-value pairs format key: value. YAML code block fenced --- (can also use ... end YAML block, common R Markdown). R, equivalent structure list named character vector: list(author = \"Malcolm Barrett\"). fact, can call list R Markdown using metadata object; case, metadata$author return \"Malcolm Barrett\" YAML, spaces used indicate nesting. want specify output function pdf_document(toc = TRUE), need nest output field. also need nest toc pdf_document gets passed function correctly. R, equivalent structure nested list, name: list(output = list(pdf_document = list(toc = TRUE))). Similarly, can call R Markdown using metadata object, e.g. metadata$output$pdf_document$toc. hierarchical structure (can see draw_yml_tree()) looks like : Without extra indents, YAML doesn’t know toc connected pdf_document thinks value pdf_document NULL. YAML looks like : hierarchy looks like : use output functions without additional arguments, value output can simply name function. However, ’re specifying one output type, must use nesting syntax. don’t want include additional arguments, use \"default\" function’s value. YAML fields take unnamed vectors value. can specify element vector adding new line - (note values indented category ). R, equivalent structure list named vector: list(categories = c(\"R\", \"Reprodicible Research\")). metadata$category return c(\"R\", \"Reprodicible Research\"). Another way specify vectors use [] object separated column, syntax c(). YAML equivalent YAML : default, ymlthis uses - syntax vectors.- also used group elements together. instance, params field parameterized reports, group parameter information together using -. first line name value parameter, lines next - extra information parameter. can use metadata call objects params, params ’s object can call directly: params$params$data return values data. R, equivalent structure nested list contains list unnamed lists: list(param = list(list(= 1, input = numeric), list(data = \"data.csv\", input = \"file\"))). inner-lists group items together, e.g. list(= 1, input = numeric) groups input.","code":" [90m---  [39m [32mauthor [39m [90m: [39m Malcolm Barrett  [90m---  [39m  [90m---  [39m [32moutput [39m [90m: [39m    [32mpdf_document [39m [90m: [39m      [32mtoc [39m [90m: [39m true  [90m---  [39m └──  [32moutput [39m [90m: [39m     └──  [32mpdf_document [39m [90m: [39m         └──  [32mtoc [39m [90m: [39m true --- output:   pdf_document: toc: true --- ├──  [32moutput [39m [90m: [39m │   └──  [32mpdf_document [39m [90m: [39m null └──  [32mtoc [39m [90m: [39m true  [90m---  [39m [32moutput [39m [90m: [39m html_document  [90m---  [39m  [90m---  [39m [32moutput [39m [90m: [39m    [32mhtml_document [39m [90m: [39m default    [32mpdf_document [39m [90m: [39m      [32mtoc [39m [90m: [39m true  [90m---  [39m  [90m---  [39m [32mcategory [39m [90m: [39m  [90m-  [39mR  [90m-  [39mReprodicible Research  [90m---  [39m --- category: [R, Reprodicible Research] ---  [90m---  [39m [32mparams [39m [90m: [39m  [90m-  [39m [32ma [39m [90m: [39m 1.0    [32minput [39m [90m: [39m numeric  [90m-  [39m [32mdata [39m [90m: [39m data.csv    [32minput [39m [90m: [39m text  [90m---  [39m └──  [32mparams [39m [90m: [39m     ├──  [32ma [39m [90m: [39m 1.0     └──  [32minput [39m [90m: [39m numeric     ├──  [32mdata [39m [90m: [39m data.csv     └──  [32minput [39m [90m: [39m text"},{"path":"https://ymlthis.r-lib.org/articles/yaml-overview.html","id":"types-in-yaml","dir":"Articles","previous_headings":"","what":"Types in YAML","title":"YAML: an Overview","text":"may noticed strings YAML don’t always need quoted. However, can useful explicitly wrap strings quotes contain special characters like : @. R code can written inline expressions `r expr`. yml_code() capture R code put valid format. R code params needs slightly different: use !r (e.g. !r expr) call R object. Logical values YAML unusual: true/false, yes/, /equivalent TRUE/FALSE R. turn table contents: default, ymlthis uses true/false. want use values literally (e.g. want string equal \"yes\"), need wrap quotation marks: NULL can specified using null ~. default, ymlthis uses null. want specify empty vector, use [], e.g. category: []. empty string, just use empty quotation marks (\"\").","code":" [90m---  [39m [32mtitle [39m [90m: [39m 'R Markdown [90m: [39m An Introduction'  [90m---  [39m author: '`r whoami::fullname()`' params:   date: !r Sys.Date() toc: true toc: yes toc: on  [90m---  [39m [32mparams [39m [90m: [39m    [32mx [39m [90m: [39m 'yes'  [90m---  [39m"},{"path":"https://ymlthis.r-lib.org/articles/yaml-overview.html","id":"sources-of-yaml","dir":"Articles","previous_headings":"","what":"Sources of YAML","title":"YAML: an Overview","text":"YAML fields use R Markdown come ? Many YAML fields use come Pandoc rmarkdown package. use YAML specify build document pass information printed template. Pandoc templates can also customized add new YAML. common sources YAML : Pandoc R Markdown Output functions (rmarkdown::pdf_document()) Custom Pandoc templates R Markdown extension packages (blogdown) Hugo (case blogdown) YAML extensible approach metadata, often way validate YAML correct. YAML often fail silently , instance, make typo field name misspecify nesting fields. information fields available R Markdown friends, see YAML Fieldguide.","code":""},{"path":"https://ymlthis.r-lib.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Malcolm Barrett. Author, maintainer. Richard Iannone. Author. RStudio. Copyright holder, funder.","code":""},{"path":"https://ymlthis.r-lib.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barrett M, Iannone R (2022). ymlthis: Write 'YAML' 'R Markdown', 'bookdown', 'blogdown', . https://ymlthis.r-lib.org, https://github.com/r-lib/ymlthis.","code":"@Manual{,   title = {ymlthis: Write 'YAML' for 'R Markdown', 'bookdown', 'blogdown', and More},   author = {Malcolm Barrett and Richard Iannone},   year = {2022},   note = {https://ymlthis.r-lib.org, https://github.com/r-lib/ymlthis}, }"},{"path":"https://ymlthis.r-lib.org/index.html","id":"ymlthis-write-yaml-for-r-markdown-bookdown-blogdown-and-more","dir":"","previous_headings":"","what":"Write YAML for R Markdown, bookdown, blogdown, and More","title":"Write YAML for R Markdown, bookdown, blogdown, and More","text":"ymlthis makes easy write YAML front matter R Markdown related documents. yml_*() functions write functions use_*() functions let write resulting YAML clipboard .yml files related project.","code":""},{"path":"https://ymlthis.r-lib.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Write YAML for R Markdown, bookdown, blogdown, and More","text":"can install ymlthis CRAN : can install development version ymlthis GitHub :","code":"install.packages(\"ymlthis\") # install.packages(\"remotes\") remotes::install_github(\"r-lib/ymlthis\")"},{"path":"https://ymlthis.r-lib.org/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Write YAML for R Markdown, bookdown, blogdown, and More","text":"yml() creates basic yml object returns simple YAML author date. ymlthis supports many YAML arguments, YAML-generating functions prefixed yml_*():","code":"library(ymlthis) #> Warning: package 'ymlthis' was built under R version 4.1.1  yml() #> --- #> author: Malcolm Barrett #> date: '`r format(Sys.Date())`' #> --- yml() %>%    yml_author(c(\"Yihui Xie\", \"Hadley Wickham\"), affiliation = \"RStudio\") %>%    yml_date(lubridate::today()) %>%    yml_output(     word_document(keep_md = TRUE),      bookdown::html_document2()   ) %>%    yml_citations(bibliography = \"references.bib\", csl = \"aje.csl\") #> --- #> author: #> - name: Yihui Xie #>   affiliation: RStudio #> - name: Hadley Wickham #>   affiliation: RStudio #> date: '2021-10-09' #> output: #>   word_document: #>     keep_md: true #>   bookdown::html_document2: default #> bibliography: references.bib #> csl: aje.csl #> ---"},{"path":"https://ymlthis.r-lib.org/index.html","id":"add-in","dir":"","previous_headings":"","what":"Add-in","title":"Write YAML for R Markdown, bookdown, blogdown, and More","text":"ymlthis also includes add-create YAML put file, .Rmd file, clipboard.","code":""},{"path":"https://ymlthis.r-lib.org/reference/as_yml.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to yml object — as_yml","title":"Convert to yml object — as_yml","text":"as_yml wrapper yaml::yaml.load() stores YAML yml object, prints cleanly console easy work using ymlthis functions.","code":""},{"path":"https://ymlthis.r-lib.org/reference/as_yml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to yml object — as_yml","text":"","code":"as_yml(x)"},{"path":"https://ymlthis.r-lib.org/reference/as_yml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to yml object — as_yml","text":"x object, either character vector length 1 list, convert yml.","code":""},{"path":"https://ymlthis.r-lib.org/reference/as_yml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to yml object — as_yml","text":"yml object","code":""},{"path":"https://ymlthis.r-lib.org/reference/as_yml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to yml object — as_yml","text":"","code":"x <- as_yml(\"   author: Hadley Wickham   date: '2014-09-12'   title: Tidy Data   keywords:   - data cleaning   - data tidying   - relational databases   - R\")    x #> --- #> author: Hadley Wickham #> date: '2014-09-12' #> title: Tidy Data #> keywords: #> - data cleaning #> - data tidying #> - relational databases #> - R #> --- #>     x %>%     yml_subtitle(\"Hadley's Tidy Data Paper\") #> --- #> author: Hadley Wickham #> date: '2014-09-12' #> title: Tidy Data #> keywords: #> - data cleaning #> - data tidying #> - relational databases #> - R #> subtitle: Hadley's Tidy Data Paper #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/asis_yaml_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Export yml object as a YAML knitr code chunk — asis_yaml_output","title":"Export yml object as a YAML knitr code chunk — asis_yaml_output","text":"asis_yaml_output() exports yml object YAML knitr code chunk instead R object. adds code highlighting YAML syntax.","code":""},{"path":"https://ymlthis.r-lib.org/reference/asis_yaml_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export yml object as a YAML knitr code chunk — asis_yaml_output","text":"","code":"asis_yaml_output(.yml, fences = TRUE)"},{"path":"https://ymlthis.r-lib.org/reference/asis_yaml_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export yml object as a YAML knitr code chunk — asis_yaml_output","text":".yml yml object created yml(), as_yml(), returned yml_*() function fences Logical. Write fences (\"---\") YAML?","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/bib2yml.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert bib files to YAML — bib2yml","title":"Convert bib files to YAML — bib2yml","text":"bib2yml() uses pandoc convert .bib file YAML. also accepts optional yml object prepend YAML .bib file. want cite several R packages, see knitr::write_bib() write bibliography file convert bib2yml().","code":""},{"path":"https://ymlthis.r-lib.org/reference/bib2yml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert bib files to YAML — bib2yml","text":"","code":"bib2yml(.yml = NULL, path)"},{"path":"https://ymlthis.r-lib.org/reference/bib2yml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert bib files to YAML — bib2yml","text":".yml yml object created yml(), as_yml(), returned yml_*() function path path .bib file","code":""},{"path":"https://ymlthis.r-lib.org/reference/bib2yml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert bib files to YAML — bib2yml","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/blogdown_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Create YAML based on blogdown theme archetypes — blogdown_template","title":"Create YAML based on blogdown theme archetypes — blogdown_template","text":"blogdown_template() creates YAML based blogdown theme archetypes. blogdown based Hugo, supports many custom themes. theme uses YAML different way. However, many come archetypes define YAML TOML. find types theme , use blogdown_archetypes() see available. Use blogdown_template() specify archetype convert template YAML can use post.","code":""},{"path":"https://ymlthis.r-lib.org/reference/blogdown_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create YAML based on blogdown theme archetypes — blogdown_template","text":"","code":"blogdown_template(type, path = \".\", theme = NULL)  blogdown_archetypes(path = \".\", theme = NULL)"},{"path":"https://ymlthis.r-lib.org/reference/blogdown_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create YAML based on blogdown theme archetypes — blogdown_template","text":"type archetype path path blogdown site theme theme check archetypes. default, blogdown_template() attempt read theme config file.","code":""},{"path":"https://ymlthis.r-lib.org/reference/blogdown_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create YAML based on blogdown theme archetypes — blogdown_template","text":"yml object","code":""},{"path":"https://ymlthis.r-lib.org/reference/code_chunk.html","id":null,"dir":"Reference","previous_headings":"","what":"Write code chunks programmatically — code_chunk","title":"Write code chunks programmatically — code_chunk","text":"code_chunk() assembles knitr code chunk character vector. setup_chunk() wrapper around code_chunk() create setup chunks. default uses include = FALSE inserts knitr::opts_chunk$set(echo = TRUE) chunk body. helper functions write R Markdown bodies use_rmarkdown().","code":""},{"path":"https://ymlthis.r-lib.org/reference/code_chunk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write code chunks programmatically — code_chunk","text":"","code":"code_chunk(chunk_code, chunk_name = NULL, chunk_args = NULL)  setup_chunk(chunk_code = NULL, chunk_args = list(include = FALSE))"},{"path":"https://ymlthis.r-lib.org/reference/code_chunk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write code chunks programmatically — code_chunk","text":"chunk_code expression. Surround {} capture multiple lines. chunk_name name chunk chunk_args list chunk options","code":""},{"path":"https://ymlthis.r-lib.org/reference/code_chunk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write code chunks programmatically — code_chunk","text":"character vector","code":""},{"path":"https://ymlthis.r-lib.org/reference/code_chunk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write code chunks programmatically — code_chunk","text":"","code":"# \\donttest{ setup_chunk() #> ```{r setup, include = FALSE} #> knitr::opts_chunk$set(echo = TRUE) #> ```  code_chunk({   yml() %>%     yml_output(pdf_document()) }, chunk_name = \"yml_example\") #> ```{r yml_example} #> yml() %>% yml_output(pdf_document()) #> ``` # }"},{"path":"https://ymlthis.r-lib.org/reference/draw_yml_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw an tree of YAML hierarchy — draw_yml_tree","title":"Draw an tree of YAML hierarchy — draw_yml_tree","text":"draw_yml_tree() draws ASCII tree hierarchy given yml object console.","code":""},{"path":"https://ymlthis.r-lib.org/reference/draw_yml_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw an tree of YAML hierarchy — draw_yml_tree","text":"","code":"draw_yml_tree(.yml = last_yml(), indent = \"\")"},{"path":"https://ymlthis.r-lib.org/reference/draw_yml_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw an tree of YAML hierarchy — draw_yml_tree","text":".yml yml object created yml(), as_yml(), returned yml_*() function indent character vector used indent tree","code":""},{"path":"https://ymlthis.r-lib.org/reference/draw_yml_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw an tree of YAML hierarchy — draw_yml_tree","text":"invisibly, .yml","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/draw_yml_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw an tree of YAML hierarchy — draw_yml_tree","text":"","code":"# draw the most recently used `yml` draw_yml_tree() #> ├── author: Hadley Wickham #> ├── date: '2014-09-12' #> ├── title: Tidy Data #> ├── keywords: #> │   ├── - data cleaning #> │   ├── - data tidying #> │   ├── - relational databases #> │   └── - R #> └── subtitle: Hadley's Tidy Data Paper # \\donttest{ yml() %>%   yml_output(     pdf_document(keep_tex = TRUE),     html_document()   ) %>%     draw_yml_tree() #> ├── date: '`r format(Sys.Date())`' #> └── output: #>     ├── pdf_document: #>     │   └── keep_tex: true #>     └── html_document: default # }"},{"path":"https://ymlthis.r-lib.org/reference/gitbook_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure bookdown::gitbook() output — gitbook_config","title":"Configure bookdown::gitbook() output — gitbook_config","text":"gitbook_config() helper function specify config argument bookdown::gitbook(), described bookdown book.","code":""},{"path":"https://ymlthis.r-lib.org/reference/gitbook_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure bookdown::gitbook() output — gitbook_config","text":"","code":"gitbook_config(   toc_collapse = yml_blank(),   toc_scroll_highlight = yml_blank(),   toc_before = yml_blank(),   toc_after = yml_blank(),   toolbar_position = yml_blank(),   edit = yml_blank(),   download = yml_blank(),   search = yml_blank(),   fontsettings_theme = yml_blank(),   fontsettings_family = yml_blank(),   fontsettings_size = yml_blank(),   sharing_facebook = yml_blank(),   sharing_twitter = yml_blank(),   sharing_google = yml_blank(),   sharing_linkedin = yml_blank(),   sharing_weibo = yml_blank(),   sharing_instapaper = yml_blank(),   sharing_vk = yml_blank(),   sharing_all = yml_blank(),   ... )"},{"path":"https://ymlthis.r-lib.org/reference/gitbook_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure bookdown::gitbook() output — gitbook_config","text":"toc_collapse Collapse items initially page loaded via collapse option. possible values \"subsection\" (default), \"section\", \"none\", NULL. toc_scroll_highlight Logical. Enable highlighting TOC items scroll book body? default TRUE. toc_before, toc_after character vector HTML add items TOC using HTML tag <li>. items separated TOC using horizontal divider. toolbar_position toolbar position: \"fixed\" \"static.\" default (\"fixed\") toolbar fixed top page, whereas set \"static\" toolbar scroll page. edit empty, edit button added toolbar. download option takes either character vector list character vectors length vector 2. character vector, either vector filenames filename extensions. provide filename extensions, filename derived book filename configuration file _bookdown.yml search Include search bar? fontsettings_theme theme. \"White\" (default), \"Sepia\", \"Night\". fontsettings_family font family. \"sans\" (default) \"serif\". fontsettings_size font size. Default 2. sharing_facebook Logical. Include Facebook share link? Default TRUE. sharing_twitter Logical. Include Twitter share link? Default TRUE. sharing_google Logical. Include Google share link? Default FALSE. sharing_linkedin Logical. Include LinkedIn share link? Default FALSE. sharing_weibo Logical. Include Weibo share link? Default FALSE. sharing_instapaper Logical. Include Instapaper share link? Default FALSE. sharing_vk Logical. Include VK share link? Default FALSE. sharing_all Logical. Include share links? Default FALSE. ... additional named R objects, characters lists, transform YAML","code":""},{"path":"https://ymlthis.r-lib.org/reference/gitbook_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure bookdown::gitbook() output — gitbook_config","text":"list use config argument bookdown::gitbook()","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/has_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if field exists in YAML — has_field","title":"Check if field exists in YAML — has_field","text":"has_field() retrieves names fields (including nested fields) checks field among .","code":""},{"path":"https://ymlthis.r-lib.org/reference/has_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if field exists in YAML — has_field","text":"","code":"has_field(.yml, field)"},{"path":"https://ymlthis.r-lib.org/reference/has_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if field exists in YAML — has_field","text":".yml yml object created yml(), as_yml(), returned yml_*() function field character vector, name field(s) check ","code":""},{"path":"https://ymlthis.r-lib.org/reference/has_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if field exists in YAML — has_field","text":"logical","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/has_field.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if field exists in YAML — has_field","text":"","code":"has_field(yml(), \"author\") #> [1] FALSE has_field(yml(), \"toc\") #> [1] FALSE"},{"path":"https://ymlthis.r-lib.org/reference/includes2.html","id":null,"dir":"Reference","previous_headings":"","what":"Include content within output — includes2","title":"Include content within output — includes2","text":"includes2() version includes() helper function rmarkdown uses yml_blank() instead NULL argument defaults, ymlthis treats NULLs literal YAML syntax (\"null\").","code":""},{"path":"https://ymlthis.r-lib.org/reference/includes2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include content within output — includes2","text":"","code":"includes2(   in_header = yml_blank(),   before_body = yml_blank(),   after_body = yml_blank() )"},{"path":"https://ymlthis.r-lib.org/reference/includes2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include content within output — includes2","text":"in_header One files content included header document. before_body One files content included document body. after_body One files content included document body.","code":""},{"path":"https://ymlthis.r-lib.org/reference/includes2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Include content within output — includes2","text":"list","code":""},{"path":"https://ymlthis.r-lib.org/reference/includes2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Include content within output — includes2","text":"","code":"# \\donttest{ yml() %>%   yml_output(     pdf_document(includes = includes2(after_body = \"footer.tex\"))   ) #> --- #> date: '`r format(Sys.Date())`' #> output: #>   pdf_document: #>     includes: #>       after_body: footer.tex #> --- #>  # }"},{"path":"https://ymlthis.r-lib.org/reference/is_yml.html","id":null,"dir":"Reference","previous_headings":"","what":"Is object a yml object? — is_yml","title":"Is object a yml object? — is_yml","text":"object yml object?","code":""},{"path":"https://ymlthis.r-lib.org/reference/is_yml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is object a yml object? — is_yml","text":"","code":"is_yml(x)"},{"path":"https://ymlthis.r-lib.org/reference/is_yml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is object a yml object? — is_yml","text":"x object test","code":""},{"path":"https://ymlthis.r-lib.org/reference/is_yml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is object a yml object? — is_yml","text":"logical vector","code":""},{"path":"https://ymlthis.r-lib.org/reference/last_yml.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the most recently printed YAML — last_yml","title":"Return the most recently printed YAML — last_yml","text":"ymlthis stores recently printed yml object; can use last_yml() retrieve modify, pass use_*() functions, .","code":""},{"path":"https://ymlthis.r-lib.org/reference/last_yml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the most recently printed YAML — last_yml","text":"","code":"last_yml()"},{"path":"https://ymlthis.r-lib.org/reference/last_yml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the most recently printed YAML — last_yml","text":"","code":"yml() %>%   yml_author(\"Yihui Xie\") #> --- #> date: '`r format(Sys.Date())`' #> author: Yihui Xie #> --- #>   last_yml() #> --- #> date: '`r format(Sys.Date())`' #> author: Yihui Xie #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/pagedown_business_card_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a full YAML template for your pagedown business card — pagedown_business_card_template","title":"Generate a full YAML template for your pagedown business card — pagedown_business_card_template","text":"pagedown unique output type make business cards: pagedown::business_card(). pagedown_business_card_template() creates YAML template use output. unique output type almost contents supplied YAML. R Markdown file contains YAML related business card enough produce output, although can also customize output body document (see pagedown vignette). good workflow write business card use pagedown_business_card_template() specify YAML pass use_rmarkdown(), can knit business cards.","code":""},{"path":"https://ymlthis.r-lib.org/reference/pagedown_business_card_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a full YAML template for your pagedown business card — pagedown_business_card_template","text":"","code":"pagedown_business_card_template(   name = yml_blank(),   person = yml_blank(),   title = yml_blank(),   phone = yml_blank(),   email = yml_blank(),   url = yml_blank(),   address = yml_blank(),   logo = yml_blank(),   .repeat = yml_blank(),   paperwidth = yml_blank(),   paperheight = yml_blank(),   cardwidth = yml_blank(),   cardheight = yml_blank(),   cols = yml_blank(),   rows = yml_blank(),   mainfont = yml_blank(),   googlefonts = yml_blank(),   ... )  pagedown_person(...)"},{"path":"https://ymlthis.r-lib.org/reference/pagedown_business_card_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a full YAML template for your pagedown business card — pagedown_business_card_template","text":"name name person creating business cards numerous people shared information, passing values person field can override default values, can values accepted function. Use pagedown_person() manually provide using list(field = value). title title person phone phone number email email address url website URL address address logo path logo file .repeat number cards repeat. Note actual YAML field repeat. paperwidth paper width paperheight paper height cardwidth width card cardheight height card cols number columns card grid rows rows columns card grid mainfont font googlefonts character vector Google Fonts ... additional named R objects, characters lists, transform YAML","code":""},{"path":"https://ymlthis.r-lib.org/reference/pagedown_business_card_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a full YAML template for your pagedown business card — pagedown_business_card_template","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/pagedown_business_card_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a full YAML template for your pagedown business card — pagedown_business_card_template","text":"","code":"pagedown_business_card_template(   name = \"Jane Doe\",   title = \"Miss Nobody\",   phone = \"+1 123-456-7890\",   email = \"jane.doe@example.com\",   url = \"www.example.com\",   address = \"2020 South Street,   Sunshine, CA 90000\",   logo = \"logo.png\",   .repeat = 12 ) #> --- #> name: Jane Doe #> title: Miss Nobody #> phone: +1 123-456-7890 #> email: jane.doe@example.com #> url: www.example.com #> address: |- #>   2020 South Street, #>     Sunshine, CA 90000 #> logo: logo.png #> repeat: 12.0 #> output: pagedown::business_card #> --- #>   pagedown_business_card_template(   phone = \"+1 123-456-7890\",   url = \"www.example.com\",   address = \"2020 South Street,   Sunshine, CA 90000\",   logo = \"logo.png\",   person = list(     pagedown_person(       name = \"Jane Doe\",       title = \"Miss Nobody\",       email = \"jane.doe@example.com\",       .repeat = 6     ),     pagedown_person(       name = \"John Doe\",       title = \"Mister Nobody\",       phone = \"+1 777-777-7777\", # overrides the default phone       email = \"john.doe@example.com\",       .repeat = 6     )   ),   paperwidth = \"8.5in\",   paperheight = \"11in\",   cols = 4,   rows = 3 ) #> --- #> person: #> - name: Jane Doe #>   title: Miss Nobody #>   email: jane.doe@example.com #>   repeat: 6.0 #> - name: John Doe #>   title: Mister Nobody #>   phone: +1 777-777-7777 #>   email: john.doe@example.com #>   repeat: 6.0 #> phone: +1 123-456-7890 #> url: www.example.com #> address: |- #>   2020 South Street, #>     Sunshine, CA 90000 #> logo: logo.png #> paperwidth: 8.5in #> paperheight: 11in #> cols: 4.0 #> rows: 3.0 #> output: pagedown::business_card #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/pandoc_template_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Use pandoc templates and custom highlight themes — pandoc_template_types","title":"Use pandoc templates and custom highlight themes — pandoc_template_types","text":"Pandoc several built templates code highlighting themes can customized included template highlight-style YAML fields, respectively. pandoc_template_types() pandoc_highlight_styles() return available templates highlight styles pandoc, respectively. use_pandoc_template() creates new file based template pandoc R Markdown use_pandoc_highlight_style() creates new highlight theme file based existing pandoc theme.","code":""},{"path":"https://ymlthis.r-lib.org/reference/pandoc_template_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use pandoc templates and custom highlight themes — pandoc_template_types","text":"","code":"pandoc_template_types()  pandoc_highlight_styles()  use_pandoc_template(type, path, source = c(\"rmarkdown\", \"pandoc\"))  use_pandoc_highlight_style(theme, path)"},{"path":"https://ymlthis.r-lib.org/reference/pandoc_template_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use pandoc templates and custom highlight themes — pandoc_template_types","text":"type template type path path write file source template source (\"pandoc\" \"rmarkdown\") theme name theme","code":""},{"path":"https://ymlthis.r-lib.org/reference/pandoc_template_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use pandoc templates and custom highlight themes — pandoc_template_types","text":"character vector","code":""},{"path":"https://ymlthis.r-lib.org/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://ymlthis.r-lib.org/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://ymlthis.r-lib.org/reference/pkgdown_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a full YAML template for your pkgdown site — pkgdown_template","title":"Generate a full YAML template for your pkgdown site — pkgdown_template","text":"pkgdown includes three helpful pkgdown::template_*() functions generate navbar, reference, article YAML _pkgdown.yml file. pkgdown_template() wrapper function runs three, combines , converts yml object. may also pass pkgdown::template_*() functions as_yml() convert individual sections. pkgdown_template() particularly useful use_pkgdown_yml() write directly _pkgdown.yml file.","code":""},{"path":"https://ymlthis.r-lib.org/reference/pkgdown_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a full YAML template for your pkgdown site — pkgdown_template","text":"","code":"pkgdown_template(path = \".\")"},{"path":"https://ymlthis.r-lib.org/reference/pkgdown_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a full YAML template for your pkgdown site — pkgdown_template","text":"path path package directory","code":""},{"path":"https://ymlthis.r-lib.org/reference/pkgdown_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a full YAML template for your pkgdown site — pkgdown_template","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/pkgdown_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a full YAML template for your pkgdown site — pkgdown_template","text":"","code":"if (FALSE) { # requires this to be a package directory pkgdown_template() %>%   use_pkgdown_yml() }"},{"path":"https://ymlthis.r-lib.org/reference/read_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write to JSON and TOML — read_json","title":"Read and write to JSON and TOML — read_json","text":"Read JSON TOML files yml objects read_*(). Write yml objects JSON YAML files write_as_*(). can also provide write_as_*() path existing .yml file translate JSON TOML. functions rely Hugo blogdown, must blogdown installed.","code":""},{"path":"https://ymlthis.r-lib.org/reference/read_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write to JSON and TOML — read_json","text":"","code":"read_json(path)  read_toml(path)  write_as_json(   .yml = NULL,   path = NULL,   out = NULL,   build_ignore = FALSE,   git_ignore = FALSE,   quiet = FALSE )  write_as_toml(   .yml = NULL,   path = NULL,   out = NULL,   build_ignore = FALSE,   git_ignore = FALSE,   quiet = FALSE )"},{"path":"https://ymlthis.r-lib.org/reference/read_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write to JSON and TOML — read_json","text":"path path JSON TOML file .yml yml object created yml(), as_yml(), returned yml_*() function path write . NULL, write path change file extension .toml .json. build_ignore Logical. file added .Rbuildignore file? git_ignore Logical. file added .gitignore file? quiet Logical. Whether message happening.","code":""},{"path":"https://ymlthis.r-lib.org/reference/read_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and write to JSON and TOML — read_json","text":"yml object (reading) path (writing)","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/use_file_yml.html","id":null,"dir":"Reference","previous_headings":"","what":"Write YAML to file — use_yml_file","title":"Write YAML to file — use_yml_file","text":"Write yml objects file. use_yml_file() writes given file name. use_output_yml() creates file _output.yml, can used multiple R Markdown documents. documents located directory _output.yml inherit output options. Options defined within document YAML headers override specified _output.yml. Note use_output_yml() plucks output field yml; YAML top-level fields ignored. use_site_yml creates _site.yml use R Markdown websites third-party tools like distill package (see R Markdown book ). use_navbar_yml special type site YAML specifies navbar _navbar.yml use_pkgdown_yml() use_bookdown_yml() write YAML files specific packages; see pkgdown blogdown documentation .","code":""},{"path":"https://ymlthis.r-lib.org/reference/use_file_yml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write YAML to file — use_yml_file","text":"","code":"use_yml_file(   .yml = NULL,   path,   build_ignore = FALSE,   git_ignore = FALSE,   quiet = FALSE )  use_output_yml(   .yml = NULL,   path = \".\",   build_ignore = FALSE,   git_ignore = FALSE,   quiet = FALSE )  use_site_yml(   .yml = NULL,   path = \".\",   build_ignore = FALSE,   git_ignore = FALSE,   quiet = FALSE )  use_navbar_yml(   .yml = NULL,   path = \".\",   build_ignore = FALSE,   git_ignore = FALSE,   quiet = FALSE )  use_pkgdown_yml(   .yml = NULL,   path = \".\",   build_ignore = TRUE,   git_ignore = FALSE,   quiet = FALSE )  use_bookdown_yml(   .yml = NULL,   path = \".\",   build_ignore = FALSE,   git_ignore = FALSE,   quiet = FALSE )"},{"path":"https://ymlthis.r-lib.org/reference/use_file_yml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write YAML to file — use_yml_file","text":".yml yml object created yml(), as_yml(), returned yml_*() function path file path write file build_ignore Logical. file added .Rbuildignore file? git_ignore Logical. file added .gitignore file? quiet Logical. Whether message happening.","code":""},{"path":"https://ymlthis.r-lib.org/reference/use_file_yml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write YAML to file — use_yml_file","text":"default, yaml package adds new line end files. environments, RStudio Projects, allow append new lines automatically. Thus, may end 2 new lines end file. like automatically remove last new line file, set options(ymlthis.remove_blank_line = TRUE).","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/use_yml.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy YAML code to your clipboard or write to a new R Markdown file — use_yml","title":"Copy YAML code to your clipboard or write to a new R Markdown file — use_yml","text":"use_yml() takes yml object puts resulting YAML clipboard paste R Markdown YAML file. use_rmarkdown() takes yml object writes new R Markdown file. can add text include body file. specified, use_rmarkdown() use setup_chunk() default. can also set default body using options(ymlthis.rmd_body = \"{text}\"); see use_rmd_defaults(). Together specifying default YAML (see use_yml_defaults()), use_rmarkdown() also serves ad-hoc way make R Markdown templates. may also supply use_rmarkdown() existing R Markdown file read YAML header; YAML header template combined .yml, supplied, written new file. use_index_rmd() wrapper around use_rmarkdown() specifically writes file called index.Rmd. default, use_yml() use_rmarkdown() use recently printed YAML via last_yml().","code":""},{"path":"https://ymlthis.r-lib.org/reference/use_yml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy YAML code to your clipboard or write to a new R Markdown file — use_yml","text":"","code":"use_yml(.yml = last_yml())  use_rmarkdown(   .yml = last_yml(),   path,   template = NULL,   include_yaml = TRUE,   include_body = TRUE,   body = NULL,   quiet = FALSE,   open_doc = interactive(),   overwrite = getOption(\"usethis.overwrite\", FALSE) )  use_index_rmd(   .yml = last_yml(),   path,   template = NULL,   include_yaml = TRUE,   include_body = TRUE,   body = NULL,   quiet = FALSE,   open_doc = interactive() )"},{"path":"https://ymlthis.r-lib.org/reference/use_yml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy YAML code to your clipboard or write to a new R Markdown file — use_yml","text":".yml yml object created yml(), as_yml(), returned yml_*() function path file path write R Markdown file template existing R Markdown file read YAML include_yaml Logical. Include template YAML? include_body Logical. Include template body? body character vector use body R Markdown file. template set, checks getOption(\"ymlthis.rmd_body\") (see use_rmd_defaults()) otherwise uses setup_chunk(). quiet Logical. Whether message happening. open_doc Logical. Open document created? default, TRUE interactive session FALSE . Also checks RStudio available. overwrite Logical. TRUE, overwrites file without asking permission. FALSE, asks interactively user wishes . Checks user's usethis.overwrite option set otherwise FALSE default.","code":""},{"path":"https://ymlthis.r-lib.org/reference/use_yml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy YAML code to your clipboard or write to a new R Markdown file — use_yml","text":"use_yml() invisibly returns input yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/use_yml_defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up default YAML — use_yml_defaults","title":"Set up default YAML — use_yml_defaults","text":"use_yml_defaults() takes yml object places code clipboard save resulting YAML default yml(). code placed clipboard raw YAML passed ymlthis.default_yml via options(). Saving code .Rprofile (see usethis::edit_r_profile())) allow yml() get_yml_defaults() return saved YAML. use_rmd_defaults() ymlthis.rmd_body, used use_rmarkdown() body text created R Markdown file.","code":""},{"path":"https://ymlthis.r-lib.org/reference/use_yml_defaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up default YAML — use_yml_defaults","text":"","code":"use_yml_defaults(.yml)  use_rmd_defaults(x)  get_yml_defaults()  get_rmd_defaults()"},{"path":"https://ymlthis.r-lib.org/reference/use_yml_defaults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up default YAML — use_yml_defaults","text":".yml yml object created yml(), as_yml(), returned yml_*() function x character vector use body text use_rmarkdown().","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new yml object — yml","title":"Create a new yml object — yml","text":"yml() initializes yml object. yml objects create valid YAML print cleanly console. default, yml() looks name (using  getOption(\"usethis.full_name\"), getOption(\"devtools.name\"), whoami::fullname()) uses today's date use author date fields, respectively. set default YAML getOption(\"ymlthis.default_option\") (see use_yml_defaults()), yml() also use include fields default. yml_empty() wrapper use default YAML fields. yml() relatedyml_*() functions validate results indeed valid YAML syntax, although every function able check input fields valid setting used .","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new yml object — yml","text":"","code":"yml(.yml = NULL, get_yml = TRUE, author = TRUE, date = TRUE)  yml_empty()"},{"path":"https://ymlthis.r-lib.org/reference/yml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new yml object — yml","text":".yml character vector, yml object, YAML-like list. See details. get_yml logical. Use YAML stored getOption(\"ymlthis.default_option\")? default, yml() includes exists. author logical. Get default author name? date logical. Get default date?","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new yml object — yml","text":"yml object","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a new yml object — yml","text":".yml accepts character vector YAML, \"author: Hadley Wickham\", object returned ymlthis functions start yml_*(), list object (e.g. list(author = \"Hadley Wickham\")). .yml objects processed as_yml(), wrapper around yaml::yaml.load(). See function details.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new yml object — yml","text":"","code":"yml() #> --- #> date: '`r format(Sys.Date())`' #> --- #>   yml(date = FALSE) #> --- #> [] #> --- #>   \"author: Hadley Wickham\\ndate: 2014-09-12\" %>%   yml() %>%   yml_title(\"Tidy Data\") %>%   yml_keywords(     c(\"data cleaning\", \"data tidying\", \"relational databases\", \"R\")   ) #> --- #> author: Hadley Wickham #> date: '2014-09-12' #> title: Tidy Data #> keywords: #> - data cleaning #> - data tidying #> - relational databases #> - R #> --- #>  # \\donttest{ yml() %>%   yml_author(     c(\"Yihui Xie\", \"Hadley Wickham\"),     affiliation = rep(\"RStudio\", 2)   ) %>%   yml_date(\"07/04/2019\") %>%   yml_output(     pdf_document(     keep_tex = TRUE,     includes = includes2(after_body = \"footer.tex\")    )   ) %>%   yml_latex_opts(biblio_style = \"apalike\") #> --- #> date: 07/04/2019 #> author: #> - name: Yihui Xie #>   affiliation: RStudio #> - name: Hadley Wickham #>   affiliation: RStudio #> output: #>   pdf_document: #>     keep_tex: true #>     includes: #>       after_body: footer.tex #> biblio-style: apalike #> --- #>  # }"},{"path":"https://ymlthis.r-lib.org/reference/yml_author.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Top-level R Markdown YAML Fields — yml_author","title":"Set Top-level R Markdown YAML Fields — yml_author","text":"functions add common top-level YAML fields R Markdown documents,  author, date, title. takes yml object adds fields related function, well checking duplicate fields (possible) checking valid entries. yml_toplevel() catch-function take named R object put top level YAML; checks duplicate fields unable validate input beyond valid YAML syntax. R Markdown templates allow additional variations YAML . instance, distill package adds url affiliation_url author field (see yml_distill_author, wraps yml_author). Several yml_*() functions also contain ... allow unique fields.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_author.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Top-level R Markdown YAML Fields — yml_author","text":"","code":"yml_author(.yml, name = NULL, affiliation = NULL, email = NULL, ...)  yml_date(.yml, date = NULL, format = \"\")  yml_title(.yml, title)  yml_subtitle(.yml, subtitle)  yml_abstract(.yml, abstract)  yml_keywords(.yml, keywords)  yml_subject(.yml, subject)  yml_description(.yml, description)  yml_category(.yml, category)  yml_lang(.yml, lang)  yml_toplevel(.yml, ...)"},{"path":"https://ymlthis.r-lib.org/reference/yml_author.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Top-level R Markdown YAML Fields — yml_author","text":".yml yml object created yml(), as_yml(), returned yml_*() function name character vector, name author(s) affiliation author's affiliation; must match length name, e.g. name length two, affiliation must well; use NA want include affiliation given author.Note formats support affiliation field. email author email address. Note formats support email field. ... additional named R objects, characters lists, transform YAML date date; default \"`r format(Sys.Date())`\", populate date automatically. format default date used, format passed format.Date(). title character vector, title document subtitle character vector, subtitle document. R Markdown formats use subtitles, may depend use output field (see yml_output()). available pdf_document(), html_document(), word_document() default. abstract character vector, abstract. Long character vectors automatically wrapped using valid YAML syntax. field available output formats; available pdf_document() html_document() default. keywords character vector keywords. field available output formats; available pdf_document(), html_document(), word_document(), odt_document(), powerpoint_presentation() default. subject character vector, subject document. field available output formats; available pdf_document(), html_document(), word_document(),  odt_document(), powerpoint_presentation() default. description character vector, description document. field available output formats; available word_document(), odt_document(), powerpoint_presentation() default. category character vector, category document. field available output formats; available word_document() powerpoint_presentation() default. lang document language using IETF language tags \"en\" \"en-US\". Language subtag lookup tool can help find appropriate tag.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_author.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Top-level R Markdown YAML Fields — yml_author","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_author.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Top-level R Markdown YAML Fields — yml_author","text":"","code":"yml_empty() %>%   yml_author(\"Yihui Xie\") %>%   yml_date(\"02-02-2002\") %>%   yml_title(\"R Markdown: An Introduction\") %>%   yml_subtitle(\"Introducing ymlthis\") %>%   yml_abstract(\"This paper will discuss a very important topic\") %>%   yml_keywords(c(\"r\", \"reproducible research\")) %>%   yml_subject(\"R Markdown\") %>%   yml_description(\"An R Markdown reader\") %>%   yml_category(\"r\") %>%   yml_lang(\"en-US\") #> --- #> author: Yihui Xie #> date: 02-02-2002 #> title: 'R Markdown: An Introduction' #> subtitle: Introducing ymlthis #> abstract: This paper will discuss a very important topic #> keywords: #> - r #> - reproducible research #> subject: R Markdown #> description: An R Markdown reader #> category: r #> lang: en-US #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_blank.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a blank object to be discarded from YAML — yml_blank","title":"Return a blank object to be discarded from YAML — yml_blank","text":"ymlthis treats NULL, NA, common argument defaults literal (e.g. author = NULL produce \"author: null\"). yml_blank() helper function indicate field included. yml_blank() primarily used default argument fields included default.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_blank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a blank object to be discarded from YAML — yml_blank","text":"","code":"yml_blank()  is_yml_blank(x)"},{"path":"https://ymlthis.r-lib.org/reference/yml_blank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a blank object to be discarded from YAML — yml_blank","text":"x field yml object","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_blank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a blank object to be discarded from YAML — yml_blank","text":"yml_blank object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_blank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a blank object to be discarded from YAML — yml_blank","text":"","code":"yml() %>%   yml_replace(author = yml_blank()) %>%   yml_discard(~is_yml_blank(.x)) #> --- #> date: '`r format(Sys.Date())`' #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_blogdown_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Top-level YAML options for blogdown — yml_blogdown_opts","title":"Set Top-level YAML options for blogdown — yml_blogdown_opts","text":"YAML blogdown comes variety sources. YAML posts, described blogdown book). Common R Markdown fields can used, two main sources YAML fields: Hugo Hugo theme using. Hugo numerous top-level YAML control output (see Hugo documentation). yml_blogdown_opts() supports Hugo YAML. Hugo theme may also add fields use. find YAML specific theme, see blogdown_template(). addition sources YAML, configuration file blog can also YAML, common; use config.toml file, based TOML (see blogdown book ).","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_blogdown_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Top-level YAML options for blogdown — yml_blogdown_opts","text":"","code":"yml_blogdown_opts(   .yml,   draft = yml_blank(),   publishdate = yml_blank(),   weight = yml_blank(),   slug = yml_blank(),   aliases = yml_blank(),   audio = yml_blank(),   date = yml_blank(),   description = yml_blank(),   expiration_date = yml_blank(),   headless = yml_blank(),   images = yml_blank(),   keywords = yml_blank(),   layout = yml_blank(),   lastmod = yml_blank(),   link_title = yml_blank(),   resources = yml_blank(),   series = yml_blank(),   summary = yml_blank(),   title = yml_blank(),   type = yml_blank(),   url = yml_blank(),   videos = yml_blank(),   ... )"},{"path":"https://ymlthis.r-lib.org/reference/yml_blogdown_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Top-level YAML options for blogdown — yml_blogdown_opts","text":".yml yml object created yml(), as_yml(), returned yml_*() function draft Logical. Set post draft? Draft posts rendered site built via blogdown::build_site() blogdown::hugo_build() rendered local preview mode. See Section D.3 blogdown book. publishdate future date publish post. Future posts rendered local preview mode weight field can take numeric value tell Hugo order pages sorting , e.g., generate list pages directory, two posts date, may assign different weights get desired order list slug character string used tail post URL. particularly useful define custom rules permanent URLs. See Section 2.2.2 blogdown book. aliases character vector one aliases (e.g., old published paths renamed content) created output directory structure audio character vector paths audio files related page date date assigned page. usually fetched date field front matter, behavior configurable. description description content expiration_date date content longer published Hugo. Note actual YAML field expiryDate headless TRUE, sets leaf bundle headless. images character vector paths images related page keywords character vector keywords content. layout layout Hugo use rendering content. default, layout matches type thus based directory. However, possible use additional layouts within type. See Hugo's Defining Content Type documentation. lastmod date content last modified link_title used creating links content.  Note actual YAML field linkTitle resources named list. Used configuring page bundle resources. See Hugo's Page Resources documentation series character vector series page belongs summary summary content .Summary Hugo page variable; see content-summaries section Hugo's documentation. title title content type type content, based directory content specified url full path content web root videos character vector paths videos related page ... additional named R objects, characters lists, transform YAML","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_blogdown_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Top-level YAML options for blogdown — yml_blogdown_opts","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_blogdown_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Top-level YAML options for blogdown — yml_blogdown_opts","text":"","code":"yml() %>%   yml_blogdown_opts(     draft = TRUE,     slug = \"blog-post\"   ) #> --- #> date: '`r format(Sys.Date())`' #> draft: true #> slug: blog-post #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_bookdown_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Top-level YAML options for bookdown — yml_bookdown_opts","title":"Set Top-level YAML options for bookdown — yml_bookdown_opts","text":"bookdown uses YAML three main places, described bookdown book: index.Rmd, _output.yml, _bookdown.yml. index.Rmd can take YAML. _output.yml intended output-related YAML, produced yml() %>% yml_output(bookdown::pdf_book()). _bookdown.yml intended configuring build book. Pass results yml_*() functions use_index_rmd(), use_bookdown_yml(), use_output_yml() write files. yml_bookdown_site() adds site: \"bookdown::bookdown_site\" YAML metadata.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_bookdown_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Top-level YAML options for bookdown — yml_bookdown_opts","text":"","code":"yml_bookdown_opts(   .yml,   book_filename = yml_blank(),   delete_merged_file = yml_blank(),   before_chapter_script = yml_blank(),   after_chapter_script = yml_blank(),   edit = yml_blank(),   history = yml_blank(),   rmd_files = yml_blank(),   rmd_subdir = yml_blank(),   output_dir = yml_blank(),   clean = yml_blank(),   ... )  yml_bookdown_site(.yml)"},{"path":"https://ymlthis.r-lib.org/reference/yml_bookdown_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Top-level YAML options for bookdown — yml_bookdown_opts","text":".yml yml object created yml(), as_yml(), returned yml_*() function book_filename character vector, filename main .Rmd file, .Rmd file created merging chapters. default, called \"_main.Rmd\". delete_merged_file Logical. Delete main .Rmd file exists? before_chapter_script, after_chapter_script character vector one R scripts executed chapter edit URL collaborators can click edit .Rmd source document current page, usually link GitHub repository. link %s actual .Rmd filename page go. history Similar edit, link edit/commit history current page. rmd_files character vector, order order .Rmd files book. rmd_files can also named list element list named output type, e.g. \"html\" \"latex\". default, bookdown merges .Rmd files order filenames. rmd_subdir whether search book source .Rmd files subdirectories (default, root directory searched). may either boolean (e.g. TRUE search book source .Rmd files project directory subdirectories) vector paths want search book source .Rmd files subset subdirectories. output_dir output directory book (\"_book\" default) clean character vector files directories cleaned bookdown::clean_book() function. ... additional named R objects, characters lists, transform YAML","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_bookdown_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Top-level YAML options for bookdown — yml_bookdown_opts","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_bookdown_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Top-level YAML options for bookdown — yml_bookdown_opts","text":"","code":"yml_empty() %>%   yml_bookdown_opts(     book_filename = \"my-book.Rmd\",     before_chapter_script = c(\"script1.R\", \"script2.R\"),     after_chapter_script = \"script3.R\",     edit = \"https =//github.com/rstudio/bookdown-demo/edit/master/%s\",     output_dir = \"book-output\",     clean = c(\"my-book.bbl\", \"R-packages.bib\")  ) #> --- #> book_filename: my-book.Rmd #> before_chapter_script: #> - script1.R #> - script2.R #> after_chapter_script: script3.R #> edit: https =//github.com/rstudio/bookdown-demo/edit/master/%s #> output_dir: book-output #> clean: #> - my-book.bbl #> - R-packages.bib #> --- #>   yml_empty() %>%   yml_bookdown_opts(     rmd_files = list(       html = c(\"index.Rmd\", \"abstract.Rmd\", \"intro.Rmd\"),       latex = c(\"abstract.Rmd\", \"intro.Rmd\")     )  ) #> --- #> rmd_files: #>   html: #>   - index.Rmd #>   - abstract.Rmd #>   - intro.Rmd #>   latex: #>   - abstract.Rmd #>   - intro.Rmd #> --- #>    x <- yml_empty() %>%   yml_title(\"A Minimal Book Example\") %>%   yml_date(yml_code(Sys.Date())) %>%   yml_author(\"Yihui Xie\") %>%   yml_bookdown_site() %>%   yml_latex_opts(     documentclass = \"book\",     bibliography = c(\"book.bib\", \"packages.bib\"),     biblio_style = \"apalike\"   ) %>%   yml_citations(     link_citations = TRUE   ) %>%   yml_description(\"This is a minimal example of using   the bookdown package to write a book.\")  x #> --- #> title: A Minimal Book Example #> date: '`r Sys.Date() `' #> author: Yihui Xie #> site: bookdown::bookdown_site #> documentclass: book #> biblio-style: apalike #> bibliography: #> - book.bib #> - packages.bib #> link-citations: true #> description: |- #>   This is a minimal example of using #>     the bookdown package to write a book. #> --- #>    # \\donttest{ output_yml <- yml_empty() %>%   yml_output(     bookdown::gitbook(       lib_dir = \"assets\",       split_by = \"section\",       config = gitbook_config(toolbar_position = \"static\")     ),     bookdown::pdf_book(keep_tex = TRUE),     bookdown::html_book(css = \"toc.css\")   ) output_yml #> --- #> output: #>   bookdown::gitbook: #>     lib_dir: assets #>     split_by: section #>     config: #>       toolbar: #>         position: static #>   bookdown::pdf_book: #>     keep_tex: true #>   bookdown::html_book: #>     css: toc.css #> --- #>  # }"},{"path":"https://ymlthis.r-lib.org/reference/yml_citations.html","id":null,"dir":"Reference","previous_headings":"","what":"Set citation-related YAML options — yml_citations","title":"Set citation-related YAML options — yml_citations","text":"yml_citations() sets citation-related YAML fields, specifying bibliography file style. controlling citation engine PDF documents, see citation_package argument rmarkdown::pdf_document().","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_citations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set citation-related YAML options — yml_citations","text":"","code":"yml_citations(   .yml,   bibliography = yml_blank(),   biblio_style = yml_blank(),   biblio_title = yml_blank(),   csl = yml_blank(),   citation_abbreviations = yml_blank(),   link_citations = yml_blank(),   nocite = yml_blank(),   suppress_bibliography = yml_blank() )"},{"path":"https://ymlthis.r-lib.org/reference/yml_citations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set citation-related YAML options — yml_citations","text":".yml yml object created yml(), as_yml(), returned yml_*() function bibliography path bibliography file, .bib file biblio_style bibliography style, used natbib biblatex. Note actual YAML field biblio-style biblio_title bibliography title, used natbib biblatex. Note actual YAML field biblio-title csl path Citation Style Language (CSL) file. CSL files used specify citation style; see CSL repository CSL files dozens journals. citation_abbreviations Path CSL abbreviations JSON file. See pandoc-citeproc documentation. Note actual YAML field citation-abbreviations. link_citations Logical. Add citations hyperlinks corresponding bibliography entries?  Note actual YAML field link-citations. nocite Citation IDs (\"@item1\") include bibliography even cited document. Including wildcard pattern \"@*\" include citations bibliography regardless cited document. suppress_bibliography Logical. Suppress bibliography?","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_citations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set citation-related YAML options — yml_citations","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_citations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set citation-related YAML options — yml_citations","text":"","code":"yml() %>%   yml_citations(bibliography = \"references.bib\", csl = \"aje.csl\") #> --- #> date: '`r format(Sys.Date())`' #> bibliography: references.bib #> csl: aje.csl #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove intermediate rendering files — yml_clean","title":"Remove intermediate rendering files — yml_clean","text":"R Markdown may create many documents rendering final product, instance using knitr turn R Markdown file Markdown file using Pandoc convert final output. clean field tells R Markdown whether remove files.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove intermediate rendering files — yml_clean","text":"","code":"yml_clean(.yml, clean)"},{"path":"https://ymlthis.r-lib.org/reference/yml_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove intermediate rendering files — yml_clean","text":".yml yml object created yml(), as_yml(), returned yml_*() function clean Logical. Remove intermediate files created making R Markdown document?","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove intermediate rendering files — yml_clean","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove intermediate rendering files — yml_clean","text":"","code":"yml() %>%   # keep intermediate files   yml_clean(FALSE) #> --- #> date: '`r format(Sys.Date())`' #> clean: false #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Take code and write it as valid YAML — yml_code","title":"Take code and write it as valid YAML — yml_code","text":"yml_code() takes R code writes valid YAML evaluated knitting. Note yml_code() evaluate validate R code captures use YAML field. R code needs formatted differently using params field parameterized reports; yml_params_code format correctly .","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take code and write it as valid YAML — yml_code","text":"","code":"yml_code(x)  yml_params_code(x)"},{"path":"https://ymlthis.r-lib.org/reference/yml_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take code and write it as valid YAML — yml_code","text":"x valid R code","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take code and write it as valid YAML — yml_code","text":"character vector class verbatim","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take code and write it as valid YAML — yml_code","text":"","code":"yml_empty() %>%   yml_date(yml_code(sys.Date())) #> --- #> date: '`r sys.Date() `' #> --- #>   yml_empty() %>%   yml_params(date = yml_params_code(sys.Date())) #> --- #> params: #>   date: !r sys.Date() #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_distill_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Top-level YAML options for distill — yml_distill_opts","title":"Set Top-level YAML options for distill — yml_distill_opts","text":"distill uses many custom YAML fields create unique features, article metadata citations. addition arguments yml_distill_opts(), ymlthis supports distill number ways. yml_distill_author() wraps yml_author() include extra used distill. distill blog, can specify listings page post belongs , including optional vector posts list ; distill_listing() helper function pass listing argument specify pages. distill uses approach navbars R Markdown. yml_navbar() friends help write YAML . YAML specifying site build, like output field navbars, can also placed _site.yml; see yml_site_opts() R Markdown website build options use_site_yml() creating file based yml object. distill's YAML options discussed greater detail articles distill website.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_distill_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Top-level YAML options for distill — yml_distill_opts","text":"","code":"yml_distill_opts(   .yml,   draft = yml_blank(),   slug = yml_blank(),   categories = yml_blank(),   listing = yml_blank(),   collection = yml_blank(),   citation_url = yml_blank(),   preview = yml_blank(),   repository_url = yml_blank(),   base_url = yml_blank(),   compare_updates_url = yml_blank(),   creative_commons = yml_blank(),   twitter_site = yml_blank(),   twitter_creator = yml_blank(),   journal_title = yml_blank(),   journal_issn = yml_blank(),   journal_publisher = yml_blank(),   volume = yml_blank(),   issue = yml_blank(),   doi = yml_blank(),   resources = yml_blank(),   ... )  yml_distill_author(   .yml,   name = yml_blank(),   url = yml_blank(),   affiliation = yml_blank(),   affiliation_url = yml_blank(),   orcid_id = yml_blank() )  distill_listing(listing_name = \"posts\", slugs = NULL)  distill_collection(   collection_name = \"post\",   feed_items_max = yml_blank(),   disqus_name = yml_blank(),   disqus_hidden = yml_blank(),   share = yml_blank(),   citations = yml_blank(),   subscribe = yml_blank() )  distill_resources(include = yml_blank(), exclude = yml_blank())"},{"path":"https://ymlthis.r-lib.org/reference/yml_distill_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Top-level YAML options for distill — yml_distill_opts","text":".yml yml object created yml(), as_yml(), returned yml_*() function draft Logical. Set post draft? Draft posts published. slug abbreviated version citation included BibTeX entry. don’t provide slug one automatically generated. categories character vector, post categories listing listing post ; either character vector, output distill_listing(), named list. collection Specify RSS, sharing, settings listing; use distill_collection() named list. citation_url URL article; automatically generated blog articles preview path link preview image article. can also set including preview = TRUE R Markdown code chunk document. repository_url URL source code article can found base_url Base (root) URL location website deployed (used providing preview images Open Graph Twitter Card) compare_updates_url URL show differences article’s current version version initially published creative_commons Designate articles create Creative Commons licensed specifying one standard Creative Commons licenses. Common options include \"CC \", \"CC -SA\", \"CC -ND\", \"CC -NC\". See distill vignette details. twitter_site Twitter handle site twitter_creator Twitter handle creator journal_title title journal journal_issn issn journal journal_publisher publisher journal volume volume article issue issue article doi article Digital Object Identifier (DOI) resources Files include exclude publishing. Use distill_resources() named list specify. ... additional named R objects, characters lists, transform YAML name character vector, name author(s) url author URL affiliation author's affiliation; must match length name, e.g. name length two, affiliation must well; use NA want include affiliation given author.Note formats support affiliation field. affiliation_url affiliation URL orcid_id author's ORCID ID listing_name character vector, name listing slugs character vector posts include listing collection_name character vector, name collection feed_items_max Number articles include RSS feed (default: 20). Specify FALSE limit number items included feed. disqus_name shortname disqus comments section (base_url field required order use Disqus) disqus_hidden Logical. Show full text disqus comments? default, FALSE obscure bibliography appendices. share Share buttons include. Choices: \"twitter\", \"linkedin\", \"facebook\", \"google-plus\", \"pinterest\". (base_url field required order use sharing links) citations Logical. _site.yml file provides base_url field, article citation appendix related metadata included automatically within published posts. Set FALSE disable behavior. subscribe path HTML file enabling readers subscribe. See distill vignette blog posts details. include, exclude character vector files explicitly include exclude publishing post. Can use wild cards, \"*.csv\".","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_distill_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Top-level YAML options for distill — yml_distill_opts","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_distill_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Top-level YAML options for distill — yml_distill_opts","text":"","code":"post_listing <- distill_listing(   slugs = c(     \"2016-11-08-sharpe-ratio\",     \"2017-11-09-visualizing-asset-returns\",     \"2017-09-13-asset-volatility\"   ) )  yml() %>%   yml_title(\"Gallery of featured posts\") %>%   yml_distill_opts(listing = post_listing) #> --- #> date: '`r format(Sys.Date())`' #> title: Gallery of featured posts #> listing: #>   posts: #>   - 2016-11-08-sharpe-ratio #>   - 2017-11-09-visualizing-asset-returns #>   - 2017-09-13-asset-volatility #> --- #>   yml_empty() %>%   yml_title(\"Reproducible Finance with R\") %>%   yml_description(\"Exploring reproducible finance with the R statistical,   computing environment.\") %>%   yml_site_opts(name = \"reproducible-finance-with-r\") %>%   yml_distill_opts(     base_url = \"https://beta.rstudioconnect.com/content/3776/\",     collection = distill_collection(       feed_items_max = 30,       disqus_name = \"reproducible-finance-with-r\",       disqus_hidden = FALSE,       share = c(\"twitter\", \"linkedin\")     )   ) #> --- #> title: Reproducible Finance with R #> description: |- #>   Exploring reproducible finance with the R statistical, #>     computing environment. #> name: reproducible-finance-with-r #> collection: #>   post: #>     feed_items_max: 30.0 #>     disqus: #>       shortname: reproducible-finance-with-r #>       hiden: false #>     share: #>     - twitter #>     - linkedin #> base_url: https://beta.rstudioconnect.com/content/3776/ #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_handlers.html","id":null,"dir":"Reference","previous_headings":"","what":"Set handlers to process the way YAML is printed — yml_handlers","title":"Set handlers to process the way YAML is printed — yml_handlers","text":"ymlthis uses yaml package process validate YAML; package also lets specify fields values printed using list handler functions. yml_handlers() specifies defaults package used print statement. See yaml::yaml.load() specifying handlers.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_handlers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set handlers to process the way YAML is printed — yml_handlers","text":"","code":"yml_handlers()"},{"path":"https://ymlthis.r-lib.org/reference/yml_latex_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Set LaTeX YAML options for PDF output — yml_latex_opts","title":"Set LaTeX YAML options for PDF output — yml_latex_opts","text":"yml_latex_opts() sets top-level YAML fields LaTeX options used pandoc (see documentation, descriptions derived), making PDF document pdf_document().","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_latex_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set LaTeX YAML options for PDF output — yml_latex_opts","text":"","code":"yml_latex_opts(   .yml,   block_headings = yml_blank(),   classoption = yml_blank(),   documentclass = yml_blank(),   geometry = yml_blank(),   indent = yml_blank(),   linestretch = yml_blank(),   margin_left = yml_blank(),   margin_right = yml_blank(),   margin_top = yml_blank(),   margin_bottom = yml_blank(),   pagestyle = yml_blank(),   papersize = yml_blank(),   secnumdepth = yml_blank(),   fontenc = yml_blank(),   fontfamily = yml_blank(),   fontfamilyoptions = yml_blank(),   fontsize = yml_blank(),   mainfont = yml_blank(),   sansfont = yml_blank(),   monofont = yml_blank(),   mathfont = yml_blank(),   CJKmainfont = yml_blank(),   mainfontoptions = yml_blank(),   sansfontoptions = yml_blank(),   monofontoptions = yml_blank(),   mathfontoptions = yml_blank(),   CJKoptions = yml_blank(),   microtypeoptions = yml_blank(),   colorlinks = yml_blank(),   linkcolor = yml_blank(),   filecolor = yml_blank(),   citecolor = yml_blank(),   urlcolor = yml_blank(),   toccolor = yml_blank(),   links_as_notes = yml_blank(),   lof = yml_blank(),   lot = yml_blank(),   thanks = yml_blank(),   toc = yml_blank(),   toc_depth = yml_blank(),   biblatexoptions = yml_blank(),   biblio_style = yml_blank(),   biblio_title = yml_blank(),   bibliography = yml_blank(),   natbiboptions = yml_blank() )"},{"path":"https://ymlthis.r-lib.org/reference/yml_latex_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set LaTeX YAML options for PDF output — yml_latex_opts","text":".yml yml object created yml(), as_yml(), returned yml_*() function block_headings make paragraph subparagraph (fourth- fifth-level headings, fifth- sixth-level book classes) free-standing rather run-; requires formatting distinguish subsubsection (third- fourth-level headings). Note YAML field actually called block-headings. classoption character vector options document class, e.g. \"oneside\" documentclass document class usually \"article\", \"book\", \"report\" geometry character vector options geometry LaTeX package, e.g. \"margin=1in\" indent Logical. Use document class settings indentation? default LaTeX template otherwise removes indentation adds space paragraphs. linestretch adjusts line spacing using setspace LaTeX package, e.g. 1.25, 1.5 margin_left, margin_right, margin_top, margin_bottom sets margins geometry used, otherwise geometry overrides . Note actual YAML fields use - instead _, e.g. margin-left. pagestyle control pagestyle LaTeX command: default article class supports \"plain\" (default), \"empty\" (running heads page numbers), \"headings\" (section titles running heads) papersize paper size, e.g. letter, a4 secnumdepth numbering depth sections (--number-sections pandoc) fontenc allows font encoding specified fontenc LaTeX package (pdflatex); default \"T1\" (see LaTeX font encodings guide) fontfamily font package use pdflatex: TeX Live includes many options, documented LaTeX Font Catalogue. default \"Latin Modern\". fontfamilyoptions character vector options fontfamily. fontsize font size body text. standard classes allow \"10pt\", \"11pt\", \"12pt\". mainfont, sansfont, monofont, mathfont, CJKmainfont font families use xelatex lualatex: take name system font, using fontspec LaTeX package. CJKmainfont uses xecjk LaTeX package.. mainfontoptions, sansfontoptions, monofontoptions, mathfontoptions, CJKoptions character vector options use mainfont, sansfont, monofont, mathfont, CJKmainfont xelatex lualatex. Allow choices available fontspec. microtypeoptions character vector options pass microtype LaTeX package. colorlinks Logical. Add color link text? Automatically enabled linkcolor, filecolor, citecolor, urlcolor, toccolor set. linkcolor, filecolor, citecolor, urlcolor, toccolor color internal links, external links, citation links, linked URLs, links table contents, respectively: uses options allowed xcolor, including dvipsnames, svgnames, x11names lists links_as_notes Logical. Print links footnotes? Note actual YAML field links--notes lof, lot Logical. Include list figures list tables? thanks contents acknowledgments footnote document title toc include table contents toc_depth level section include table contents. Note actual YAML field toc-depth biblatexoptions list options biblatex. biblio_style bibliography style, used natbib biblatex. Note actual YAML field biblio-style biblio_title bibliography title, used natbib biblatex. Note actual YAML field biblio-title bibliography path bibliography file use references natbiboptions character vector options natbib","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_latex_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set LaTeX YAML options for PDF output — yml_latex_opts","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_latex_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set LaTeX YAML options for PDF output — yml_latex_opts","text":"","code":"# \\donttest{ yml() %>%    yml_output(pdf_document()) %>%    yml_latex_opts(      fontfamily = \"Fira Sans Thin\",      fontsize = \"11pt\",      links_as_notes = TRUE    ) #> --- #> date: '`r format(Sys.Date())`' #> output: pdf_document #> fontfamily: Fira Sans Thin #> fontsize: 11pt #> links-as-notes: true #> --- #>  # }"},{"path":"https://ymlthis.r-lib.org/reference/yml_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load YAML from string — yml_load","title":"Load YAML from string — yml_load","text":"yml_load() wrapper yaml::yaml.load() also converts object yml class.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load YAML from string — yml_load","text":"","code":"yml_load(x)"},{"path":"https://ymlthis.r-lib.org/reference/yml_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load YAML from string — yml_load","text":"x object pass yaml::yaml.load()","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load YAML from string — yml_load","text":"","code":"c(\"title: my title\", \"author: Malcolm Barrett\") %>%   yml_load() #> --- #> title: my title #> author: Malcolm Barrett #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Capture, validate, and write output YAML — yml_output","title":"Capture, validate, and write output YAML — yml_output","text":"yml_output() writes valid YAML output field R Markdown YAML. yml_output() captures actual output functions, pdf_document(), translates YAML. function accepts multiple output formats (separated commas) validates evaluating function internally. YAML fields output come arguments respective R functions. wanted see available fields pdf_document(), instance, read documentation function using ?pdf_document.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capture, validate, and write output YAML — yml_output","text":"","code":"yml_output(.yml, ...)"},{"path":"https://ymlthis.r-lib.org/reference/yml_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capture, validate, and write output YAML — yml_output","text":".yml yml object created yml(), as_yml(), returned yml_*() function ... valid R code calling functions return objects class rmarkdown_output_format, *_document() functions rmarkdown.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capture, validate, and write output YAML — yml_output","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_output.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capture, validate, and write output YAML — yml_output","text":"","code":"# \\donttest{ yml() %>%   yml_output(html_document()) #> --- #> date: '`r format(Sys.Date())`' #> output: html_document #> --- #>   yml() %>%   yml_output(     pdf_document(keep_tex = TRUE, includes = includes2(after_body = \"footer.tex\")),     bookdown::html_document2()   ) #> --- #> date: '`r format(Sys.Date())`' #> output: #>   pdf_document: #>     keep_tex: true #>     includes: #>       after_body: footer.tex #>   bookdown::html_document2: default #> --- #>  # }"},{"path":"https://ymlthis.r-lib.org/reference/yml_pagedown_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Top-level YAML options for pagedown — yml_pagedown_opts","title":"Top-level YAML options for pagedown — yml_pagedown_opts","text":"pagedown offers several output functions paginated output, resumes, business cards, theses, morem described pagedown vignette. pagedown also accepts custom top-level YAML. See pagedown_business_card_template() setting YAML business card.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_pagedown_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Top-level YAML options for pagedown — yml_pagedown_opts","text":"","code":"yml_pagedown_opts(   .yml,   toc = yml_blank(),   toc_title = yml_blank(),   lot = yml_blank(),   lot_title = yml_blank(),   chapter_name = yml_blank(),   links_to_footnotes = yml_blank(),   paged_footnotes = yml_blank() )"},{"path":"https://ymlthis.r-lib.org/reference/yml_pagedown_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Top-level YAML options for pagedown — yml_pagedown_opts","text":".yml yml object created yml(), as_yml(), returned yml_*() function toc Logical. Use table contents? toc_title title table contents. Note actual YAML field toc-title lot Logical. Use list figures? lot_title title list figures. Note actual YAML field lot-title chapter_name chapter title prefix links_to_footnotes Logical. Transform URLs footnotes? Note actual YAML field links--footnotes paged_footnotes Logical. Render notes footnotes? Note actual YAML field paged-footnotes","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_pagedown_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Top-level YAML options for pagedown — yml_pagedown_opts","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_pagedown_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Top-level YAML options for pagedown — yml_pagedown_opts","text":"","code":"yml() %>%   yml_pagedown_opts(     toc = TRUE,     toc_title = \"TOC\",     chapter_name = c(\"CHAPTER\\\\ \", \".\"),     links_to_footnotes = TRUE   ) #> --- #> date: '`r format(Sys.Date())`' #> toc: true #> toc-title: TOC #> chapter_name: #> - 'CHAPTER\\ ' #> - '.' #> links-to-footnotes: true #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameterize an R Markdown report using Shiny components — yml_params","title":"Parameterize an R Markdown report using Shiny components — yml_params","text":"R Markdown lets add dynamic parameters report using params YAML field (see R Markdown book examples); parameterized reports also used RStudio Connect. values variables can called inside R Markdown document using params$field_name. several ways change values parameters: manually change YAML, use params argument rmarkdown::render(), knit parameters, launches Shiny app select values . yml_params() accepts number named R objects set YAML fields. can also pass arguments underlying Shiny functions using YAML. set shiny component, use shiny_*() helper functions. shiny_params() captures Shiny output function transforms YAML. However, R Markdown supports limited number components; included function starting shiny_*(), e.g. shiny_checkbox()","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameterize an R Markdown report using Shiny components — yml_params","text":"","code":"yml_params(.yml, ...)  shiny_params(.shiny)  shiny_checkbox(label, value = FALSE, width = NULL)  shiny_numeric(label, value, min = NA, max = NA, step = NA, width = NULL)  shiny_slider(   label,   min,   max,   value,   step = NULL,   round = FALSE,   format = NULL,   ticks = TRUE,   animate = FALSE,   width = NULL,   sep = \",\",   pre = NULL,   post = NULL,   timeFormat = NULL,   timezone = NULL,   dragRange = TRUE )  shiny_date(   label,   value = NULL,   min = NULL,   max = NULL,   format = \"yyyy-mm-dd\",   startview = \"month\",   weekstart = 0,   language = \"en\",   width = NULL,   autoclose = TRUE,   datesdisabled = NULL,   daysofweekdisabled = NULL )  shiny_text(label, value = \"\", width = NULL, placeholder = NULL)  shiny_file(   label,   multiple = FALSE,   accept = NULL,   width = NULL,   buttonLabel = \"Browse...\",   placeholder = \"No file selected\" )  shiny_radio(   label,   choices = NULL,   selected = NULL,   inline = FALSE,   width = NULL,   choiceNames = NULL,   choiceValues = NULL )  shiny_select(   label,   choices,   selected = NULL,   multiple = FALSE,   selectize = TRUE,   width = NULL,   size = NULL )  shiny_password(label, value = \"\", width = NULL, placeholder = NULL)"},{"path":"https://ymlthis.r-lib.org/reference/yml_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameterize an R Markdown report using Shiny components — yml_params","text":".yml yml object created yml(), as_yml(), returned yml_*() function ... additional named R objects, characters lists, transform YAML .shiny Shiny function call capture convert YAML label Display label control, NULL label. value Initial value (TRUE FALSE). width width input, e.g. '400px', '100%'; see shiny::validateCssUnit() min Minimum allowed value max Maximum allowed value step Interval use stepping min max round TRUE round values nearest integer; FALSE rounding desired; integer round number digits (example, 1 round nearest 10, -2 round nearest .01). rounding applied snapping nearest step. format format date display browser. Defaults \"yyyy-mm-dd\". ticks FALSE hide tick marks, TRUE show according simple heuristics. animate TRUE show simple animation controls default settings; FALSE ; custom settings list, created using shiny::animationOptions() sep Separator thousands places numbers. pre prefix string put front value. post suffix string put value. timeFormat used values Date POSIXt objects. time format string, passed Javascript strftime library. See https://github.com/samsonjs/strftime details. allowed format specifications similar, identical, R's base::strftime() function. Dates, default \"%F\" (like \"2015-07-01\"), POSIXt, default \"%F %T\" (like \"2015-07-01 15:32:10\"). timezone used values POSIXt objects. string specifying time zone offset displayed times, format \"+HHMM\" \"-HHMM\". NULL (default), times displayed browser's time zone. value \"+0000\" result UTC time. dragRange option used range slider (two values). TRUE (default), range can dragged. words, min max can dragged together. FALSE, range dragged. startview date range shown input object first clicked. Can \"month\" (default), \"year\", \"decade\". weekstart day start week. integer 0 (Sunday) 6 (Saturday). language language used month day names. Default \"en\". valid values include \"ar\", \"az\", \"bg\", \"bs\", \"ca\", \"cs\", \"cy\", \"da\", \"de\", \"el\", \"en-AU\", \"en-GB\", \"eo\", \"es\", \"et\", \"eu\", \"fa\", \"fi\", \"fo\", \"fr-CH\", \"fr\", \"gl\", \"\", \"hr\", \"hu\", \"hy\", \"id\", \"\", \"-CH\", \"\", \"ja\", \"ka\", \"kh\", \"kk\", \"ko\", \"kr\", \"lt\", \"lv\", \"\", \"mk\", \"mn\", \"ms\", \"nb\", \"nl-\", \"nl\", \"\", \"pl\", \"pt-BR\", \"pt\", \"ro\", \"rs-latin\", \"rs\", \"ru\", \"sk\", \"sl\", \"sq\", \"sr-latin\", \"sr\", \"sv\", \"sw\", \"th\", \"tr\", \"uk\", \"vi\", \"zh-CN\", \"zh-TW\". autoclose Whether close datepicker immediately date selected. datesdisabled dates disabled. Either Date object, string yyyy-mm-dd format. daysofweekdisabled Days week disabled. integer vector values 0 (Sunday) 6 (Saturday). placeholder character string giving user hint can entered control. Internet Explorer 8 9 support option. multiple Whether user allowed select upload multiple files . work older browsers, including Internet Explorer 9 earlier. accept character vector \"unique file type specifiers\" gives browser hint type file server expects. Many browsers use prevent user selecting invalid file. unique file type specifier can : case insensitive extension like .csv .rds. valid MIME type, like text/plain application/pdf One audio/*, video/*, image/* meaning audio, video, image type, respectively. buttonLabel label used button. Can text HTML tag object. choices List values select (elements list named name rather value displayed user). argument provided, choiceNames choiceValues must provided, vice-versa. values strings; types (logicals numbers) coerced strings. selected initially selected value. specified, defaults first item choices. start items selected, use character(0). inline TRUE, render choices inline (.e. horizontally) choiceNames List names values, respectively, displayed user app correspond choice (reason, choiceNames choiceValues must length). either arguments provided, must provided choices must provided. advantage using named list choices choiceNames allows type UI object passed (tag objects, icons, HTML code, ...), instead just simple text. See Examples. choiceValues List names values, respectively, displayed user app correspond choice (reason, choiceNames choiceValues must length). either arguments provided, must provided choices must provided. advantage using named list choices choiceNames allows type UI object passed (tag objects, icons, HTML code, ...), instead just simple text. See Examples. selectize Whether use selectize.js . size Number items show selection box; larger number result taller box. compatible selectize=TRUE. Normally, multiple=FALSE, select input drop-list, size set, box instead.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameterize an R Markdown report using Shiny components — yml_params","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameterize an R Markdown report using Shiny components — yml_params","text":"","code":"yml() %>%   yml_params(     z = \"z\",     x = shiny_numeric(\"Starting value\", 23),     no = shiny_checkbox(\"No option?\"),     y = shiny_slider(\"Data range\", 0, 1, .5, round = TRUE)   ) #> --- #> date: '`r format(Sys.Date())`' #> params: #>   z: z #>   x: #>     input: numeric #>     label: Starting value #>     value: 23.0 #>   'no': #>     input: checkbox #>     label: No option? #>   'y': #>     input: slider #>     label: Data range #>     min: 0.0 #>     max: 1.0 #>     value: 0.5 #>     round: true #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_pkgdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Top-level YAML options for pkgdown — yml_pkgdown","title":"Set Top-level YAML options for pkgdown — yml_pkgdown","text":"functions set YAML various pkgdown options used _pkgdown.yml. options described greater depth pkgdown vignette help pages pkgdown::build_site(), pkgdown::build_articles(), pkgdown::build_reference(), pkgdown::build_tutorials(). Essentially, control build vignettes function references. pkgdown also uses approach navbars R Markdown. yml_navbar() friends help write YAML . useful approach writing pkgdown YAML might use pkgdown_template() build template based package directory, modify yml_pkgdown_*() pkgdown_*() functions yml_replace() yml_discard(), pass results use_pkgdown_yml() write _pkgdown.yml","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_pkgdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Top-level YAML options for pkgdown — yml_pkgdown","text":"","code":"yml_pkgdown(.yml, as_is = yml_blank(), extension = yml_blank())  yml_pkgdown_opts(   .yml,   site_title = yml_blank(),   destination = yml_blank(),   url = yml_blank(),   toc_depth = yml_blank() )  yml_pkgdown_development(   .yml,   mode = yml_blank(),   dev_destination = yml_blank(),   version_label = yml_blank(),   version_tooltip = yml_blank() )  yml_pkgdown_template(   .yml,   bootswatch = yml_blank(),   ganalytics = yml_blank(),   noindex = yml_blank(),   package = yml_blank(),   path = yml_blank(),   assets = yml_blank(),   default_assets = yml_blank() )  yml_pkgdown_reference(.yml, ...)  pkgdown_ref(   title = yml_blank(),   desc = yml_blank(),   contents = yml_blank(),   exclude = yml_blank(),   ... )  yml_pkgdown_news(.yml, one_page = yml_blank())  yml_pkgdown_articles(.yml, ...)  pkgdown_article(   title = yml_blank(),   desc = yml_blank(),   contents = yml_blank(),   exclude = yml_blank(),   ... )  yml_pkgdown_tutorial(.yml, ...)  pkgdown_tutorial(   name = yml_blank(),   title = yml_blank(),   tutorial_url = yml_blank(),   source = yml_blank(),   ... )  yml_pkgdown_figures(   .yml,   dev = yml_blank(),   dpi = yml_blank(),   dev.args = yml_blank(),   fig.ext = yml_blank(),   fig.width = yml_blank(),   fig.height = yml_blank(),   fig.retina = yml_blank(),   fig.asp = yml_blank(),   ... )  yml_pkgdown_docsearch(   .yml,   api_key = yml_blank(),   index_name = yml_blank(),   doc_url = yml_blank() )"},{"path":"https://ymlthis.r-lib.org/reference/yml_pkgdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Top-level YAML options for pkgdown — yml_pkgdown","text":".yml yml object created yml(), as_yml(), returned yml_*() function as_is Logical. Use output_format options specified? extension output extension, e.g. \"pdf\". site_title title website (default, package name). Note actual YAML title (specified site_title avoid duplication content titles). destination path site rendered (\"docs/\" default) url URL site published; setting URL allow pkgdown sites link site needed, generate sitemap.xml increase searchability site, generate CNAME. toc_depth depth headers included Table Contents. Note actual YAML depth nested toc. mode development mode site, one : \"auto\", \"release\", \"development\", \"unreleased\". development controls site built; color package version; optional tooltip associated version; indexing site search engines. See ?pkgdown::build_site() details. dev_destination subdirectory used development site, defaults \"dev/\". Note actual YAML destination nested development. version_label Label display \"development\" \"unreleased\" mode. One : \"danger\" (default), \"default\", \"info\", \"warning\". version_tooltip custom message include version tooltip bootswatch bootswatch theme site. See options https://rstudio.github.io/shinythemes/. ganalytics Google Analytics tracking id noindex Logical. Suppress indexing pages web robots? package R package directories inst/pkgdown/assets inst/pkgdown/templates override default templates add additional assets; alternatively, can specify path assets path path templates override default pkgdown templates assets path additional assets include default_assets Logical. Include default assets? ... additional named R objects, characters lists, transform YAML title title article, reference, tutorial, resource desc description article reference contents contents, can also dplyr-style tidy selectors (e.g \"contains('index')\"). exclude exclude captured contents one_page Logical. Create one page per release NEWS.md? name name file tutorial_url tutorial URL embed iframe source URL source code tutorial dev graphics device (default: \"grDevices::png\") dpi DPI (default: 96) dev.args vector arguments pass dev fig.ext figure extension (default: \"png\") fig.width figure width (default: 7.2916667) fig.height figure height (default: NULL) fig.retina figure retina value (default: 2) fig.asp aspect ratio (default: 1.618) api_key API key provided docsearch (see pkgdown vignette) index_name index name provided docsearch (see pkgdown vignette) doc_url URL specifying location documentation. Note actual YAML field url nested.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_pkgdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Top-level YAML options for pkgdown — yml_pkgdown","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_pkgdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Top-level YAML options for pkgdown — yml_pkgdown","text":"","code":"yml_empty() %>%   yml_pkgdown(     as_is = TRUE,     extension = \"pdf\"   ) %>%   yml_pkgdown_reference(     pkgdown_ref(       title = \"pkgdown functions\",       contents = \"contains('function_name')\"     )   ) %>%   yml_pkgdown_articles(     pkgdown_article(       title = \"Introduction to the package\"     )   ) #> --- #> pkgdown: #>   as_is: true #>   extension: pdf #> references: #>   title: pkgdown functions #>   contents: contains('function_name') #> articles: #>   title: Introduction to the package #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Write references as YAML fields — yml_reference","title":"Write references as YAML fields — yml_reference","text":"yml_reference() creates YAML fields references used citation. reference() simple function add references yml_reference(). easiest way add references R Markdown file use bibliography file, .bib, bibliography field (see yml_citations()). documents references, however, might useful make references self-contained YAML. yml_reference() can also transform YAML bibentry citation objects created bybibentry() citation(). cite many R packages convert references YAML, may better use knitr::write_bib() write bibliography file convert bib2yml().","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write references as YAML fields — yml_reference","text":"","code":"yml_reference(.yml, ..., .bibentry = NULL)  reference(id = NULL, ...)"},{"path":"https://ymlthis.r-lib.org/reference/yml_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write references as YAML fields — yml_reference","text":".yml yml object created yml(), as_yml(), returned yml_*() function ... Fields relevant citation (e.g. bibtex fields) .bibentry object created bibentry() citation(). Note requires pandoc-citeproc installed. id character vector use reference ID","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write references as YAML fields — yml_reference","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_reference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write references as YAML fields — yml_reference","text":"","code":"ref <- reference(   id = \"fenner2012a\",   title = \"One-click science marketing\",   author = list(     family = \"Fenner\",     given = \"Martin\"   ),   `container-title` = \"Nature Materials\",   volume = 11L,   URL = \"https://doi.org/10.1038/nmat3283\",   DOI = \"10.1038/nmat3283\",   issue = 4L,   publisher = \"Nature Publishing Group\",   page = \"261-263\",   type = \"article-journal\",   issued = list(     year = 2012,     month = 3   ) )  yml() %>%   yml_reference(ref) #> --- #> date: '`r format(Sys.Date())`' #> reference: #> - id: fenner2012a #>   title: One-click science marketing #>   author: #>     family: Fenner #>     given: Martin #>   container-title: Nature Materials #>   volume: 11 #>   URL: https://doi.org/10.1038/nmat3283 #>   DOI: 10.1038/nmat3283 #>   issue: 4 #>   publisher: Nature Publishing Group #>   page: 261-263 #>   type: article-journal #>   issued: #>     year: 2012.0 #>     month: 3.0 #> --- #>   # from ?bibentry bref <- c(    bibentry(      bibtype = \"Manual\",      title = \"boot: Bootstrap R (S-PLUS) Functions\",      author = c(        person(\"Angelo\", \"Canty\", role = \"aut\",          comment = \"S original\"),        person(c(\"Brian\", \"D.\"), \"Ripley\", role = c(\"aut\", \"trl\", \"cre\"),          comment = \"R port, author of parallel support\",          email = \"ripley@stats.ox.ac.uk\")      ),      year = \"2012\",      note = \"R package version 1.3-4\",      url = \"https://CRAN.R-project.org/package=boot\",      key = \"boot-package\"    ),     bibentry(      bibtype = \"Book\",      title = \"Bootstrap Methods and Their Applications\",      author = as.person(\"Anthony C. Davison [aut], David V. Hinkley [aut]\"),      year = \"1997\",      publisher = \"Cambridge University Press\",      address = \"Cambridge\",      isbn = \"0-521-57391-2\",      url = \"http://statwww.epfl.ch/davison/BMA/\",      key = \"boot-book\"    ) ) # \\donttest{ # requires pandoc-citeproc to be installed yml() %>%   yml_reference(.bibentry = bref) #> --- #> date: '`r format(Sys.Date())`' #> --- #>   yml() %>%   yml_reference(.bibentry = citation(\"purrr\")) #> --- #> date: '`r format(Sys.Date())`' #> --- #>  # }"},{"path":"https://ymlthis.r-lib.org/reference/yml_replace.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace, pluck, or discard top-level YAML fields — yml_replace","title":"Replace, pluck, or discard top-level YAML fields — yml_replace","text":"yml_replace() replaces named field another value. opposed duplicating top-level fields functions, explicitly replacing yml_replace() raise warning. yml_discard() removes values given either character vector names purrr-style lambda predicate (~ predicate); see examples. yml_pluck() yml_chuck() wrappers around purrr::pluck() purrr::chuck() return yml objects.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_replace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace, pluck, or discard top-level YAML fields — yml_replace","text":"","code":"yml_replace(.yml, ...)  yml_discard(.yml, .rid)  yml_pluck(.yml, ...)  yml_chuck(.yml, ...)"},{"path":"https://ymlthis.r-lib.org/reference/yml_replace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace, pluck, or discard top-level YAML fields — yml_replace","text":".yml yml object created yml(), as_yml(), returned yml_*() function ... additional named R objects, characters lists, transform YAML .rid character vector fields remove purrr-style lambda predicate (~ predicate) fields TRUE discarded","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_replace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace, pluck, or discard top-level YAML fields — yml_replace","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_replace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace, pluck, or discard top-level YAML fields — yml_replace","text":"","code":"# \\donttest{ yml() %>%   yml_clean(TRUE) %>%   yml_replace(clean = FALSE) %>%   yml_discard(\"author\") #> --- #> date: '`r format(Sys.Date())`' #> clean: false #> --- #>   yml() %>%   yml_output(     pdf_document(),     html_document()   )%>%   yml_discard(~ length(.x) > 1) #> --- #> date: '`r format(Sys.Date())`' #> --- #>  # }"},{"path":"https://ymlthis.r-lib.org/reference/yml_resource_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Add external resource files to R Markdown document — yml_resource_files","title":"Add external resource files to R Markdown document — yml_resource_files","text":"resource_files field specifies character vectors paths external resources include output, e.g. files necessary rendering. files handled rmarkdown::find_external_resources().","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_resource_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add external resource files to R Markdown document — yml_resource_files","text":"","code":"yml_resource_files(.yml, resource_files)"},{"path":"https://ymlthis.r-lib.org/reference/yml_resource_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add external resource files to R Markdown document — yml_resource_files","text":".yml yml object created yml(), as_yml(), returned yml_*() function resource_files path file, directory, wildcard pattern (\"data/*.csv\")","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_resource_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add external resource files to R Markdown document — yml_resource_files","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_resource_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add external resource files to R Markdown document — yml_resource_files","text":"","code":"yml() %>%   yml_resource_files(c(\"data/mydata.csv\", \"images/figure.png\")) #> --- #> date: '`r format(Sys.Date())`' #> resource_files: #> - data/mydata.csv #> - images/figure.png #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_rsconnect_email.html","id":null,"dir":"Reference","previous_headings":"","what":"Set YAML for Scheduled Emails in RStudio Connect — yml_rsconnect_email","title":"Set YAML for Scheduled Emails in RStudio Connect — yml_rsconnect_email","text":"RStudio Connect allows schedule emails send using R Markdown. uses special type YAML using top-level field rmd_output_metadata tells RStudio Connect email output. Several rsc_* fields exist specify different components email, can set YAML header programmatically using rmarkdown::output_metadata(). See RStudio Connect documentation . yml_output_metadata() allows add type content rmd_output_metadata field.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_rsconnect_email.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set YAML for Scheduled Emails in RStudio Connect — yml_rsconnect_email","text":"","code":"yml_rsconnect_email(   .yml,   rsc_email_subject = yml_blank(),   rsc_email_body_html = yml_blank(),   rsc_email_body_text = yml_blank(),   rsc_email_images = yml_blank(),   rsc_output_files = yml_blank(),   rsc_email_attachments = yml_blank(),   rsc_email_suppress_scheduled = yml_blank(),   rsc_email_suppress_report_attachment = yml_blank(),   resource_files = yml_blank(),   ... )  yml_output_metadata(.yml, ...)"},{"path":"https://ymlthis.r-lib.org/reference/yml_rsconnect_email.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set YAML for Scheduled Emails in RStudio Connect — yml_rsconnect_email","text":".yml yml object created yml(), as_yml(), returned yml_*() function rsc_email_subject subject email. report without rsc_email_subject entry uses published document name. rsc_email_body_html, rsc_email_body_text body email, either plain text HTML. report neither entry uses automatically generated, plain-text body link report’s URL. rsc_email_images Images embed email. embedded image must Content ID used body HTML providing image rsc_email_images, image must base64-encoded, e.g. base64enc package. rsc_output_files vector file names available report rendered. list file exist rendering report, Connect log message continue trying processing files listed. output files generated rendering report, also need list resource_files upload report Connect. rsc_email_attachments vector file names attached email. rsc_email_suppress_scheduled Logical. email schedule suppressed? Default FALSE. rsc_email_suppress_report_attachment Logical. rendered document included attachment? Default TRUE. resource_files file files host RStudio Connect generated report, e.g. existing file. ... additional named R objects, characters lists, transform YAML","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_rsconnect_email.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set YAML for Scheduled Emails in RStudio Connect — yml_rsconnect_email","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_rsconnect_email.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set YAML for Scheduled Emails in RStudio Connect — yml_rsconnect_email","text":"","code":"yml() %>%   yml_rsconnect_email(     rsc_email_subject = \"Quarterly report\",     rsc_output_files = \"data.csv\",     rsc_email_attachments = c(\"attachment_1.csv\", \"attachment_2.csv\")   ) #> --- #> date: '`r format(Sys.Date())`' #> rmd_output_metadata: #>   rsc_email_subject: Quarterly report #>   rsc_output_files: data.csv #>   rsc_email_attachments: #>   - attachment_1.csv #>   - attachment_2.csv #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_rticles_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Set YAML related to rticles output formats — yml_rticles_opts","title":"Set YAML related to rticles output formats — yml_rticles_opts","text":"rticles package include numerous output formats specific academic journals. can take YAML similar pdf_document(). Additionally, two templates include custom YAML, rticles::sage_article() rticles::sim_article(). See help pages functions details sources LaTeX templates used .","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_rticles_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set YAML related to rticles output formats — yml_rticles_opts","text":"","code":"yml_rticles_opts(   .yml,   title = yml_blank(),   runninghead = yml_blank(),   author = yml_blank(),   authormark = yml_blank(),   address = yml_blank(),   corrauth = yml_blank(),   corres = yml_blank(),   email = yml_blank(),   abstract = yml_blank(),   received = yml_blank(),   revised = yml_blank(),   accepted = yml_blank(),   keywords = yml_blank(),   bibliography = yml_blank(),   longtable = yml_blank(),   classoption = yml_blank(),   header_includes = yml_blank(),   include_after = yml_blank(),   ... )  rticles_author(name = yml_blank(), num = yml_blank())  rticles_address(name = yml_blank(), org = yml_blank())  rticles_corr_author(   name = yml_blank(),   author = yml_blank(),   address = yml_blank() )"},{"path":"https://ymlthis.r-lib.org/reference/yml_rticles_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set YAML related to rticles output formats — yml_rticles_opts","text":".yml yml object created yml(), as_yml(), returned yml_*() function title Title manuscript runninghead character vector, short author list header (sage_article) author list authors, containing name num fields (sage_article, sim_article). Use rticles_author() list specify. authormark character vector, short author list header (sim_article) address list containing num org defining author affiliations (sage_article, sim_article). Use rticles_address() list specify. corrauth corresponding author name address (sage_article). Use rticles_corr_author() list specify. corres author address correspondence (sim_article). Use rticles_corr_author() list specify. email email correspondence author (sage_article) abstract abstract, limited 200 words (sage_article), 250 words (sim_article) received, revised, accepted dates submission, revision, acceptance manuscript (sim_article) keywords keywords article (sage_article), 6 keywords (sim_article) bibliography BibTeX .bib file name  (sage_article, sim_article) longtable Logical. Include longtable package? Used default pandoc convert markdown LaTeX code (sim_article) classoption character vector classoption options sagej class (sage_article) header_includes additional LaTeX code include header, \\\\begin\\{document\\} statement (sage_article, sim_article). Note actual YAML field header-includes include_after additional LaTeX code include \\\\end\\{document\\} statement (sage_article, sim_article). Note actual YAML field include-. ... additional named R objects, characters lists, transform YAML name author's name num author's number address number org author's organization","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_rticles_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set YAML related to rticles output formats — yml_rticles_opts","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_rticles_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set YAML related to rticles output formats — yml_rticles_opts","text":"","code":"yml() %>%   yml_rticles_opts(received = \"09-12-2014\") #> --- #> date: '`r format(Sys.Date())`' #> received: 09-12-2014 #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_runtime.html","id":null,"dir":"Reference","previous_headings":"","what":"Activate Shiny in R Markdown — yml_runtime","title":"Activate Shiny in R Markdown — yml_runtime","text":"runtime field lets use Shiny R Markdown document, making interactive. See R Markdown book examples.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_runtime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Activate Shiny in R Markdown — yml_runtime","text":"","code":"yml_runtime(.yml, runtime = c(\"static\", \"shiny\", \"shiny_prerendered\"))"},{"path":"https://ymlthis.r-lib.org/reference/yml_runtime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Activate Shiny in R Markdown — yml_runtime","text":".yml yml object created yml(), as_yml(), returned yml_*() function runtime runtime target rendering. static, default, renders static documents; shiny allows include use Shiny document. shiny_prerendered subset shiny runtime allows pre-rendering app components (see R Markdown site )","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_runtime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Activate Shiny in R Markdown — yml_runtime","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_runtime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Activate Shiny in R Markdown — yml_runtime","text":"","code":"yml() %>%   yml_runtime(\"shiny\") #> --- #> date: '`r format(Sys.Date())`' #> runtime: shiny #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_site_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Add site options for _site.yml and navbars for R Markdown websites — yml_site_opts","title":"Add site options for _site.yml and navbars for R Markdown websites — yml_site_opts","text":"R Markdown simple website builder baked (see R Markdown book detailed description). R Markdown website must least index.Rmd file _site.yml file (can empty). Including YAML _site.yml apply R Markdown files website, e.g. setting output format tell R Markdown use format across website. R Markdown websites also support navbars, can specify YAML (see yml_navbar(), well ?rmarkdown::render_site ?rmarkdown::html_document). Pass navbar_page() left right field set page tabs use navbar_separator() include separators. addition writing YAML yml_*() functions, use_site_yml() take yml object write _site.yml file .","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_site_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add site options for _site.yml and navbars for R Markdown websites — yml_site_opts","text":"","code":"yml_site_opts(   .yml,   name = yml_blank(),   favicon = yml_blank(),   output_dir = yml_blank(),   include = yml_blank(),   exclude = yml_blank(),   new_session = yml_blank(),   ... )  yml_navbar(   .yml,   title = yml_blank(),   type = yml_blank(),   left = yml_blank(),   right = yml_blank(),   ... )  navbar_page(   text = yml_blank(),   href = yml_blank(),   icon = yml_blank(),   menu = yml_blank(),   ... )  navbar_separator()"},{"path":"https://ymlthis.r-lib.org/reference/yml_site_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add site options for _site.yml and navbars for R Markdown websites — yml_site_opts","text":".yml yml object created yml(), as_yml(), returned yml_*() function name name website favicon Path file use favicon output_dir Directory copy site content (\"_site\" default none specified) include, exclude Files include exclude copied output_dir. can use * indicate wildcard selection, e.g. \"*.csv\". new_session Logical. website file rendered new R session? ... additional named R objects, characters lists, transform YAML title title website type color scheme navigation bar: either \"default\" \"inverse\". left, right side navbar navbar_page() go (see example) text link text href link URL icon icon include menu drop-menus specified including another navbar_page()","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_site_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add site options for _site.yml and navbars for R Markdown websites — yml_site_opts","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_site_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add site options for _site.yml and navbars for R Markdown websites — yml_site_opts","text":"","code":"yml_empty() %>%   yml_site_opts(     name = \"my-website\",     output_dir =  \"_site\",     include = \"demo.R\",     exclude = c(\"docs.txt\", \"*.csv\")   ) %>%   yml_navbar(     title = \"My Website\",     left = list(       navbar_page(\"Home\", href = \"index.html\"),       navbar_page(navbar_separator(), href = \"about.html\")     )   ) %>%   yml_output(html_document(toc = TRUE, highlight = \"textmate\")) #> --- #> name: my-website #> output_dir: _site #> include: demo.R #> exclude: #> - docs.txt #> - '*.csv' #> navbar: #>   title: My Website #>   left: #>   - text: Home #>     href: index.html #>   - text: '---------' #>     href: about.html #> output: #>   html_document: #>     toc: true #>     highlight: textmate #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_toc.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify Table of Contents options — yml_toc","title":"Specify Table of Contents options — yml_toc","text":"generally better specify Table Contents output function using clearer idea options (e.g. html_document(toc = TRUE, toc_float = TRUE)). However, can also generally specify top level YAML.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_toc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify Table of Contents options — yml_toc","text":"","code":"yml_toc(   .yml,   toc = yml_blank(),   toc_depth = yml_blank(),   toc_title = yml_blank(),   ... )"},{"path":"https://ymlthis.r-lib.org/reference/yml_toc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify Table of Contents options — yml_toc","text":".yml yml object created yml(), as_yml(), returned yml_*() function toc Logical. Use Table Contents? toc_depth integer. depth headers use TOC. Note actual YAML field toc-depth. toc_title title TOC. Note actual YAML field toc-title. ... additional named R objects, characters lists, transform YAML","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_toc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify Table of Contents options — yml_toc","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_toc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify Table of Contents options — yml_toc","text":"","code":"yml() %>%  yml_toc(toc = TRUE, toc_depth = 1, toc_title = \"Article Outline\") #> --- #> date: '`r format(Sys.Date())`' #> toc: true #> toc-depth: 1.0 #> toc-title: Article Outline #> --- #>"},{"path":"https://ymlthis.r-lib.org/reference/yml_verbatim.html","id":null,"dir":"Reference","previous_headings":"","what":"Write YAML field or content verbatim — yml_verbatim","title":"Write YAML field or content verbatim — yml_verbatim","text":"yml_verbatim() helper function write YAML precisely given yml_*() function rather defaults ymlthis yaml. ymlthis uses yaml package check valid syntax; yaml ymlthis together make decisions write syntax, can often done numerous valid ways. See yaml::.yaml() details.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_verbatim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write YAML field or content verbatim — yml_verbatim","text":"","code":"yml_verbatim(x)"},{"path":"https://ymlthis.r-lib.org/reference/yml_verbatim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write YAML field or content verbatim — yml_verbatim","text":"x character vector","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_verbatim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write YAML field or content verbatim — yml_verbatim","text":"object class verbatim","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_verbatim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write YAML field or content verbatim — yml_verbatim","text":"","code":"# \"yes\" and \"no\" serve as alternatives to `true` and `false`. This writes # \"yes\" literally. yml_verbatim(\"yes\") #> [1] \"yes\" #> attr(,\"class\") #> [1] \"verbatim\""},{"path":"https://ymlthis.r-lib.org/reference/yml_vignette.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up a package vignette — yml_vignette","title":"Set up a package vignette — yml_vignette","text":"use R Markdown file vignette, need specify output format appropriate inclusion package (example, lightweight html_vignette() output function included rmarkdown) specify vignette field, specifies title, engine, encoding type vignette. See also usethis::use_vignette() setting package vignette.","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_vignette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up a package vignette — yml_vignette","text":"","code":"yml_vignette(.yml, title, engine = \"knitr::rmarkdown\", encoding = \"UTF-8\")"},{"path":"https://ymlthis.r-lib.org/reference/yml_vignette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up a package vignette — yml_vignette","text":".yml yml object created yml(), as_yml(), returned yml_*() function title title vignette engine rendering engine vignette (\"knitr::rmarkdown\" default) encoding character encoding document (\"UTF-8\" default).","code":""},{"path":"https://ymlthis.r-lib.org/reference/yml_vignette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up a package vignette — yml_vignette","text":"yml object","code":""},{"path":[]},{"path":"https://ymlthis.r-lib.org/reference/yml_vignette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set up a package vignette — yml_vignette","text":"","code":"yml() %>%   yml_output(html_vignette()) %>%   yml_vignette(\"An introduction to R Markdown\") #> --- #> date: '`r format(Sys.Date())`' #> output: html_vignette #> vignette: \"%\\\\VignetteIndexEntry{An introduction to R Markdown} \\n    %\\\\VignetteEngine{knitr::rmarkdown} #>   \\n    %\\\\VignetteEncoding{UTF-8})\" #> --- #>"},{"path":"https://ymlthis.r-lib.org/news/index.html","id":"ymlthis-development-version","dir":"Changelog","previous_headings":"","what":"ymlthis (development version)","title":"ymlthis (development version)","text":"yml_author() now correctly accepts yml_blank() needed (#71)","code":""},{"path":"https://ymlthis.r-lib.org/news/index.html","id":"ymlthis-015","dir":"Changelog","previous_headings":"","what":"ymlthis 0.1.5","title":"ymlthis 0.1.5","text":"CRAN release: 2021-09-15 Update citeproc functionality rely newer rmarkdown functions","code":""},{"path":"https://ymlthis.r-lib.org/news/index.html","id":"ymlthis-013","dir":"Changelog","previous_headings":"","what":"ymlthis 0.1.3","title":"ymlthis 0.1.3","text":"CRAN release: 2021-01-12 Minor changes address upcoming changes shiny 1.6","code":""},{"path":"https://ymlthis.r-lib.org/news/index.html","id":"ymlthis-012","dir":"Changelog","previous_headings":"","what":"ymlthis 0.1.2","title":"ymlthis 0.1.2","text":"CRAN release: 2020-02-03 updated roxygen2 rendering removed unnecessary ... description yml_pagedown_opts() fixed bug removing blank line work called wrong object (issue #52, thanks @dchiu911)","code":""},{"path":"https://ymlthis.r-lib.org/news/index.html","id":"ymlthis-011","dir":"Changelog","previous_headings":"","what":"ymlthis 0.1.1","title":"ymlthis 0.1.1","text":"CRAN release: 2019-11-18 Fixed errors fieldguide introduced changes roxygen2 7.0.0 (#50) Add option ymlthis.remove_blank_line. TRUE, YAML files final lines removed (#42) Synced arguments use_rmarkdown() use_index_rmd() added open_doc argument disable opening file (#41) Fix bug usethis::write_over() getting quiet argument set correctly (issue #37) Added biblio_style biblio_title yml_citations() (issue #40)","code":""},{"path":"https://ymlthis.r-lib.org/news/index.html","id":"ymlthis-010","dir":"Changelog","previous_headings":"","what":"ymlthis 0.1.0","title":"ymlthis 0.1.0","text":"CRAN release: 2019-10-02 Added NEWS.md file track changes package. Initial release package","code":""}]
